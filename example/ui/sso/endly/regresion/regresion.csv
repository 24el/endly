Workflow,,,Name,Description,Tasks,,,,[]Init.Name,[]Init.From,[]Init.Required,,,,
,,,regresion,SSO app regresion test,%Tasks,,,,targetHost,params.targetHost,TRUE,,,,
,,,,,,,,,targetHostCredential,params.targetHostCredential,TRUE,,,,
,,,,,,,,,seleniumServerPort,params.seleniumServerPort,TRUE,,,,
[]Tasks,,,Name,Description,Actions,,,,,,,,,,
,,,prepare,Prepare data for test use cases,%Prepare,,,,,,,,,,
[]Prepare,,Service,Action,Description,Request,RunCriteria,,SleepTimeMs,[]Init.Name,[]Init.From,[]Post.Name,[]Post.From,,,
,,selenium,start,Start selenium server,@req/selenium_start,,,,,,,,,,
-,,dsunit,register,Register database,@req/db1_register,,,,users,!AsTableRecords(data.ds.users),,,,,
-,,dsunit,prepare,Prepare data in datastore,@req/db1_prepare,!Length($users):!0,,,,,,,,,
-,,selenium,open,Open selenium testing session,@req/selenium_open,,,2000,,,SeleniumSessionID,SessionID,,,
[]Tasks,,,Name,Description,Actions,,,,,,,,,,
,,,test,Defines test requests,%Test,,,,,,,,,,
[]Test{1..008},Subpath,Service,Action,Description,Request,SkipCriteria,RunCriteria,action,[]Init.Name,[]Init.From,[]Post.Name,[]Post.From,/Data.ds.[]users,TagDescription,SleepTimeMs
,use_cases/${index}*,nop,nop,Skip this group if skip.txt is present,{},!HasResource(${subPath}/skip.txt):true,,,,,,,@user,@use_case.txt,
-,use_cases/${index}*,selenium,run,run selenium actions,@req/selenium_run|@$action,,,@action.txt,,,seleniumData,Data,,,100
-,use_cases/${index}*,validator,assert,validate selenium data,@req/assert_selenium|@selenium_expect,,,,,,,,,,
-,use_cases/${index}*,dsunit,expect,verify register user in datastore,@db1_expect,,!HasResource(${subPath}/db1_expect):true,,,,,,,,
[]Tasks,,,Name,Description,Actions,,,,,,,,,,
,,,clean,Stop test services,%Clean,,,,,,,,,,
[]Clean,,Service,Action,Description,Request,SleepTimeMs,,,,,,,,,
,,nop,nop,Sleep,{},1000,,,,,,,,,
,,selenium,close,Close selenium session,@req/selenium_close,,,,,,,,,,
,,selenium,stop,Stop selenium server,@req/selenium_stop,,,,,,,,,,