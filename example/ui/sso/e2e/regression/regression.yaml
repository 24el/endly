pipeline:
  init:
    iplookup:
      action: http/endpoint:listen
      port: 8383
      rotate: true
      baseDirectory: ipinfo/

    selenium:
      action: run
      request: '@req/selenium_init'
      comments: initialize seleniun


    data:
      action: run
      request: '@data_init'
      comments: set initial app state


  test:
    tag: Test
    description: '@use_case'
    data:
      'db1.[]setup': '@user'
    comments: add setup data

    subPath: 'use_cases/${index}*'
    range: 1..009
    template:
      skip-tag:
        action: nop
        skip: $HasResource(${subPath}/skip.txt)
        comments: skip tag Id if subdirectory has skip.txt file present

      seleniun:
        when: $HasResource(${subPath}/selenium_test.yaml)
        action: selenium:run
        request: '@selenium_test @selenium_data'
        comments: test with selenium runner

      http:
        when: $HasResource(${subPath}/http_test.json)
        action: 'http/runner:send'
        request: '@http_test @http_data'
        comments: test with http runner

      db1-expect:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: db1
        comments: verify test $db state after use case

    post-test-sleep:
      action: nop
      sleepTimeMs: 1000
      comments: sleep for extra debuging

    destroy:
      action: run
      request: '@req/selenium_destroy'