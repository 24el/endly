pipeline:
  init:
    data:
      action: run
      request: '@data_init'
      comments: set initial app state

  test:
    tag: Test
    description: '@use_case'

    subPath: 'use_cases/${index}*'
    range: 1..003
    template:
      skip-tag:
        action: nop
        skip: $HasResource(${subPath}/skip.txt)
        comments: skip tag Id if subdirectory has skip.txt file present

      db3-prepare:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:prepare
        request: '@req/expect'
        db: db3
        comments: preseed db3 with test data

      db4-prepare:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:prepare
        request: '@req/expect'
        db: db4
        comments: preseed db4 with test data

      copy:
        action: 'rest/runner:send'
        request: '@rest_test @copy'
        comments: test with rest runner
        uri: /api/copy/

      db3-validate:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: db3
        comments: verify test db3 state after use case

      db4-validate:
        when: '$HasResource(${path}/expect/${db})'
        action: dsunit:expect
        request: '@req/expect'
        db: db4
        comments: verify test db4 state after use case


    post-test-sleep:
      action: nop
      sleepTimeMs: 1000
      comments: sleep for extra debuging
