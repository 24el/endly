Workflow,,,Name,Description,Tasks,,,Init,,,
,,,regression,$app app regresion test,%Tasks,,,@var/init,,,
[]Tasks,,,Name,Description,Actions,,,,,,
,,,init,Initialise tests,%Init,,,,,,
[]Init,,Service,Action,Description,Request,,,,,,
,,workflow,run,init selenium,@req/selenium_init,,,,,,
,,validator/log,listen,set log listener,@req/log_listen,,,,,,
,,workflow,run,set initial data state,@data,,,,,,
[]Tasks,,,Name,Description,Actions,,,,,,
,,,test,Defines test requests,%Test,,,,,,
[]Test{1..002},Subpath,Service,Action,Description,Request,Skip,When,Init,TagDescription,db,/Data.db
,use_cases/${index}*,,nop,skip this group if skip.txt is present,{},$HasResource(${subPath}/skip.txt):true,,@var/test_init,@use_case.txt,,
,use_cases/${index}*,,nop,push test data,{},,$HasResource(${subPath}/setup_data.json):true,,,,@setup_data
,use_cases/${index}*,dsunit,prepare,set initial test $db state,@req/prepare,,$HasResource(${path}/prepare/${db}):true,,,$datastore,
,use_cases/${index}*,selenium,run,run selenium test,@selenium_test,,,,,,
,use_cases/${index}*,http/runner,send,run HTTP test,@http_test,,,,,,
,use_cases/${index}*,rest/runner,send,run REST test,@rest_test,,,,,,
,use_cases/${index}*,dsunit,expect,verify test $db state,@req/expect,,$HasResource(${path}/expect/${db}):true,,,$datastore,
,use_cases/${index}*,,nop,push expected log records for validation,{},,$HasResource(${path}/expect/logType1.json):true,@var/push_log|@logType1,,,
[]Test,,Service,Action,Description,Request,SleepTimeMs,When,,,,
,,,nop,sleep for easy debuging,{},1000,,,,,
,,validator/log,assert,validate log records,@req/log_validate,,$Len($logRecords) > 0,,,,
[]Tasks,,,Name,Description,Actions,,,,,,
,,,destroy,stop test services,%Destroy,,,,,,
[]Destroy,,Service,Action,Description,Request,SleepTimeMs,,,,,
,,,nop,sleep for easy debuging,{},1000,,,,,
,,,run,close and stop seleniun,@req/selenium_destroy,,,,,,