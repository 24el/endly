package static

import (
	"bytes"
	"github.com/viant/toolbox/storage"
	"log"
)

func init() {
	var memStorage = storage.NewMemoryService()
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/notify/email/notify_error_body.md", bytes.NewReader([]byte{42, 42, 42, 69, 110, 99, 111, 117, 110, 116, 101, 114, 32, 101, 114, 114, 111, 114, 58, 32, 36, 123, 101, 114, 114, 111, 114, 46, 69, 114, 114, 111, 114, 125, 42, 42, 42, 10, 10, 87, 111, 114, 107, 102, 108, 111, 119, 58, 32, 36, 123, 101, 114, 114, 111, 114, 46, 87, 111, 114, 107, 102, 108, 111, 119, 78, 97, 109, 101, 125, 10, 84, 97, 115, 107, 58, 32, 36, 123, 101, 114, 114, 111, 114, 46, 84, 97, 115, 107, 78, 97, 109, 101, 125, 10, 65, 99, 116, 105, 111, 110, 58, 32, 32, 36, 123, 101, 114, 114, 111, 114, 46, 65, 99, 116, 105, 111, 110, 82, 101, 113, 117, 101, 115, 116, 46, 83, 101, 114, 118, 105, 99, 101, 125, 46, 32, 36, 123, 101, 114, 114, 111, 114, 46, 65, 99, 116, 105, 111, 110, 82, 101, 113, 117, 101, 115, 116, 46, 65, 99, 116, 105, 111, 110, 125, 10, 10, 10, 82, 101, 113, 117, 101, 115, 116, 58, 10, 10, 96, 96, 96, 106, 115, 111, 110, 10, 10, 32, 36, 123, 101, 114, 114, 111, 114, 46, 82, 101, 113, 117, 101, 115, 116, 125, 10, 10, 96, 96, 96, 10, 10, 10, 82, 101, 115, 112, 111, 110, 115, 101, 58, 10, 10, 96, 96, 96, 106, 115, 111, 110, 10, 10, 32, 36, 123, 101, 114, 114, 111, 114, 46, 82, 101, 115, 112, 111, 110, 115, 101, 125, 10, 10, 96, 96, 96, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/notify/email/notify_error_body.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/notify/email/notify_error.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 13, 10, 44, 44, 44, 110, 111, 116, 105, 102, 121, 95, 101, 114, 114, 111, 114, 44, 83, 101, 110, 100, 32, 101, 109, 97, 105, 108, 32, 119, 105, 116, 104, 32, 101, 114, 114, 111, 114, 32, 109, 101, 115, 115, 97, 103, 101, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 110, 111, 116, 105, 102, 121, 95, 101, 114, 114, 111, 114, 95, 105, 110, 105, 116, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 44, 110, 111, 116, 105, 102, 121, 44, 69, 114, 114, 111, 114, 32, 110, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110, 32, 116, 97, 115, 107, 44, 37, 78, 111, 116, 105, 102, 121, 44, 13, 10, 91, 93, 78, 111, 116, 105, 102, 121, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 13, 10, 44, 44, 115, 109, 116, 112, 44, 115, 101, 110, 100, 44, 115, 101, 110, 100, 32, 101, 114, 114, 111, 114, 32, 110, 111, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 115, 101, 110, 100, 95, 101, 114, 114, 111, 114, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/notify/email/notify_error.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/notify/email/var/init.json", bytes.NewReader([]byte{91, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 114, 114, 111, 114, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 114, 114, 111, 114, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 83, 77, 84, 80, 69, 110, 100, 112, 111, 105, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 83, 77, 84, 80, 69, 110, 100, 112, 111, 105, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 102, 114, 111, 109, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 102, 114, 111, 109, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 118, 105, 97, 110, 116, 101, 110, 100, 108, 121, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 99, 101, 105, 118, 101, 114, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 99, 101, 105, 118, 101, 114, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 117, 98, 106, 101, 99, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 117, 98, 106, 101, 99, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 70, 97, 105, 108, 101, 100, 32, 116, 111, 32, 114, 117, 110, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 36, 123, 101, 114, 114, 111, 114, 46, 87, 111, 114, 107, 102, 108, 111, 119, 78, 97, 109, 101, 125, 32, 36, 123, 101, 114, 114, 111, 114, 46, 84, 97, 115, 107, 78, 97, 109, 101, 125, 32, 32, 36, 123, 101, 114, 114, 111, 114, 46, 65, 99, 116, 105, 111, 110, 82, 101, 113, 117, 101, 115, 116, 46, 83, 101, 114, 118, 105, 99, 101, 125, 46, 32, 36, 123, 101, 114, 114, 111, 114, 46, 65, 99, 116, 105, 111, 110, 82, 101, 113, 117, 101, 115, 116, 46, 65, 99, 116, 105, 111, 110, 125, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 111, 100, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 33, 77, 97, 114, 107, 100, 111, 119, 110, 40, 110, 111, 116, 105, 102, 121, 95, 101, 114, 114, 111, 114, 95, 98, 111, 100, 121, 46, 109, 100, 41, 34, 13, 10, 32, 32, 125, 13, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/notify/email/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/notify/email/req/send_error.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 84, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 83, 77, 84, 80, 69, 110, 100, 112, 111, 105, 110, 116, 34, 44, 10, 32, 32, 34, 77, 97, 105, 108, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 36, 102, 114, 111, 109, 34, 44, 10, 32, 32, 32, 32, 34, 83, 117, 98, 106, 101, 99, 116, 34, 58, 32, 34, 36, 115, 117, 98, 106, 101, 99, 116, 34, 44, 10, 32, 32, 32, 32, 34, 84, 111, 34, 58, 32, 34, 36, 114, 101, 99, 101, 105, 118, 101, 114, 115, 34, 44, 10, 32, 32, 32, 32, 34, 67, 111, 110, 116, 101, 110, 116, 84, 121, 112, 101, 34, 58, 32, 34, 116, 101, 120, 116, 47, 104, 116, 109, 108, 34, 44, 10, 32, 32, 32, 32, 34, 66, 111, 100, 121, 34, 58, 32, 34, 36, 98, 111, 100, 121, 34, 10, 32, 32, 125, 10, 125, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/notify/email/req/send_error.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/deploy/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 114, 101, 108, 101, 97, 115, 101, 47, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 103, 105, 115, 116, 114, 121, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 101, 110, 100, 108, 121, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 103, 105, 115, 116, 114, 121, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 103, 105, 115, 116, 114, 121, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 101, 109, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 118, 105, 97, 110, 116, 47, 101, 110, 100, 108, 121, 47, 119, 111, 114, 107, 102, 108, 111, 119, 47, 97, 112, 112, 47, 100, 111, 99, 107, 101, 114, 47, 115, 101, 99, 114, 101, 116, 47, 114, 101, 103, 105, 115, 116, 114, 121, 46, 106, 115, 111, 110, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 115, 101, 114, 110, 97, 109, 101, 34, 58, 32, 34, 36, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 73, 109, 97, 103, 101, 34, 58, 32, 34, 36, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 86, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 118, 101, 114, 115, 105, 111, 110, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 112, 112, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 97, 112, 112, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 117, 112, 100, 97, 116, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 117, 112, 100, 97, 116, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 93, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/deploy/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/deploy/req/run_from_registry.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 105, 109, 97, 103, 101, 58, 32, 36, 123, 114, 101, 103, 105, 115, 116, 114, 121, 125, 47, 36, 123, 97, 112, 112, 125, 58, 36, 118, 101, 114, 115, 105, 111, 110, 10, 34, 46, 46, 46, 34, 58, 32, 36, 112, 97, 114, 97, 109, 115}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/deploy/req/run_from_registry.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/deploy/req/copy.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 10, 32, 32, 85, 82, 76, 58, 32, 36, 117, 112, 100, 97, 116, 101, 46, 85, 82, 76, 10, 100, 101, 115, 116, 58, 10, 32, 32, 85, 82, 76, 58, 32, 36, 117, 112, 100, 97, 116, 101, 46, 85, 82, 76, 10, 114, 101, 112, 108, 97, 99, 101, 58, 32, 36, 117, 112, 100, 97, 116, 101, 46, 114, 101, 112, 108, 97, 99, 101, 10, 101, 120, 112, 97, 110, 100, 58, 32, 116, 114, 117, 101}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/deploy/req/copy.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/deploy/req/login.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 114, 101, 112, 111, 115, 105, 116, 111, 114, 121, 58, 32, 36, 114, 101, 103, 105, 115, 116, 114, 121, 10, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 114, 101, 103, 105, 115, 116, 114, 121, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/deploy/req/login.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/deploy/req/run.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 105, 109, 97, 103, 101, 58, 32, 36, 123, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 125, 47, 36, 123, 97, 112, 112, 125, 58, 36, 118, 101, 114, 115, 105, 111, 110, 10, 34, 46, 46, 46, 34, 58, 32, 36, 112, 97, 114, 97, 109, 115}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/deploy/req/run.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/deploy/deploy.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 13, 10, 44, 44, 100, 101, 112, 108, 111, 121, 44, 100, 101, 112, 108, 111, 121, 32, 97, 112, 112, 32, 105, 109, 97, 103, 101, 32, 116, 111, 32, 100, 111, 99, 107, 101, 114, 32, 99, 111, 110, 116, 97, 105, 110, 101, 114, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 100, 101, 112, 108, 111, 121, 44, 100, 101, 112, 108, 111, 121, 32, 97, 112, 112, 32, 105, 109, 97, 103, 101, 44, 37, 68, 101, 112, 108, 111, 121, 44, 13, 10, 91, 93, 68, 101, 112, 108, 111, 121, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 108, 111, 103, 105, 110, 44, 108, 111, 103, 105, 110, 32, 116, 111, 32, 100, 111, 99, 107, 101, 114, 32, 114, 101, 103, 105, 115, 116, 114, 121, 44, 64, 114, 101, 113, 47, 108, 111, 103, 105, 110, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 58, 116, 114, 117, 101, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 117, 112, 100, 97, 116, 101, 32, 97, 115, 115, 101, 116, 44, 64, 114, 101, 113, 47, 99, 111, 112, 121, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 117, 112, 100, 97, 116, 101, 41, 32, 62, 32, 49, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 97, 112, 112, 32, 105, 109, 97, 103, 101, 44, 64, 114, 101, 113, 47, 114, 117, 110, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 58, 33, 116, 114, 117, 101, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 97, 112, 112, 32, 105, 109, 97, 103, 101, 44, 64, 114, 101, 113, 47, 114, 117, 110, 95, 102, 114, 111, 109, 95, 114, 101, 103, 105, 115, 116, 114, 121, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 58, 116, 114, 117, 101}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/deploy/deploy.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/secret/registry.json", bytes.NewReader([]byte{123, 34, 85, 115, 101, 114, 110, 97, 109, 101, 34, 58, 34, 101, 110, 100, 108, 121, 34, 44, 34, 69, 110, 99, 114, 121, 112, 116, 101, 100, 80, 97, 115, 115, 119, 111, 114, 100, 34, 58, 34, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 103, 86, 82, 115, 97, 106, 69, 51, 53, 48, 68, 75, 47, 111, 70, 57, 76, 86, 118, 84, 114, 34, 125, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/secret/registry.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/secret/root.json", bytes.NewReader([]byte{123, 34, 85, 115, 101, 114, 110, 97, 109, 101, 34, 58, 34, 114, 111, 111, 116, 34, 44, 34, 69, 110, 99, 114, 121, 112, 116, 101, 100, 80, 97, 115, 115, 119, 111, 114, 100, 34, 58, 34, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 117, 53, 121, 88, 57, 65, 109, 114, 88, 88, 65, 61, 61, 34, 125, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/secret/root.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 110, 116, 97, 105, 110, 101, 114, 78, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 103, 111, 95, 98, 117, 105, 108, 100, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 110, 116, 97, 105, 110, 101, 114, 78, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 100, 111, 99, 107, 101, 114, 73, 109, 97, 103, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 114, 97, 115, 116, 97, 115, 104, 101, 101, 112, 47, 117, 98, 117, 110, 116, 117, 45, 115, 115, 104, 100, 58, 49, 52, 46, 48, 52, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 100, 111, 99, 107, 101, 114, 73, 109, 97, 103, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 99, 114, 101, 116, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 99, 114, 101, 116, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 117, 115, 101, 67, 111, 110, 116, 97, 105, 110, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 117, 115, 101, 67, 111, 110, 116, 97, 105, 110, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 116, 114, 117, 101, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 112, 108, 97, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 112, 108, 97, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 120, 112, 97, 110, 100, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 120, 112, 97, 110, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 117, 112, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 117, 112, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 93, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 100, 111, 119, 110, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 93, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 100, 111, 119, 110, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 117, 112, 101, 114, 85, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 80, 97, 114, 97, 109, 115, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 117, 112, 101, 114, 85, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 102, 97, 108, 115, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 109, 109, 97, 110, 100, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 109, 109, 97, 110, 100, 115, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 103, 76, 97, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 103, 76, 97, 116, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 102, 97, 108, 115, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 98, 117, 105, 108, 100, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 98, 117, 105, 108, 100, 47, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 114, 101, 108, 101, 97, 115, 101, 47, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 100, 111, 99, 107, 101, 114, 102, 105, 108, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 100, 111, 99, 107, 101, 114, 102, 105, 108, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 99, 111, 110, 102, 105, 103, 47, 68, 111, 99, 107, 101, 114, 102, 105, 108, 101, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 103, 105, 115, 116, 114, 121, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 101, 110, 100, 108, 121, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 103, 105, 115, 116, 114, 121, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 103, 105, 115, 116, 114, 121, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 101, 109, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 118, 105, 97, 110, 116, 47, 101, 110, 100, 108, 121, 47, 119, 111, 114, 107, 102, 108, 111, 119, 47, 97, 112, 112, 47, 100, 111, 99, 107, 101, 114, 47, 115, 101, 99, 114, 101, 116, 47, 114, 101, 103, 105, 115, 116, 114, 121, 46, 106, 115, 111, 110, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 111, 117, 114, 99, 101, 84, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 111, 117, 114, 99, 101, 84, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 115, 101, 114, 110, 97, 109, 101, 34, 58, 32, 34, 36, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 73, 109, 97, 103, 101, 34, 58, 32, 34, 36, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 86, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 118, 101, 114, 115, 105, 111, 110, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 84, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 84, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 82, 101, 103, 105, 115, 116, 114, 121, 34, 58, 32, 34, 36, 114, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 73, 109, 97, 103, 101, 34, 58, 32, 34, 36, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 86, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 118, 101, 114, 115, 105, 111, 110, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 108, 97, 116, 101, 115, 116, 84, 97, 114, 103, 101, 116, 84, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 108, 97, 116, 101, 115, 116, 84, 97, 114, 103, 101, 116, 84, 97, 103, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 82, 101, 103, 105, 115, 116, 114, 121, 34, 58, 32, 34, 36, 114, 101, 103, 105, 115, 116, 114, 121, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 73, 109, 97, 103, 101, 34, 58, 32, 34, 36, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 86, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 108, 97, 116, 101, 115, 116, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 99, 112, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 55, 55, 50, 50, 47, 36, 123, 98, 117, 105, 108, 100, 80, 97, 116, 104, 125, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 109, 101, 109, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 118, 105, 97, 110, 116, 47, 101, 110, 100, 108, 121, 47, 119, 111, 114, 107, 102, 108, 111, 119, 47, 97, 112, 112, 47, 100, 111, 99, 107, 101, 114, 47, 115, 101, 99, 114, 101, 116, 47, 114, 111, 111, 116, 46, 106, 115, 111, 110, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/sdk.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 115, 100, 107, 58, 32, 36, 115, 100, 107}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/sdk.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/cmd.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 116, 105, 109, 101, 111, 117, 116, 77, 115, 58, 32, 50, 52, 48, 48, 48, 48, 10, 115, 117, 112, 101, 114, 85, 115, 101, 114, 58, 32, 36, 115, 117, 112, 101, 114, 85, 115, 101, 114, 10, 115, 101, 99, 114, 101, 116, 115, 58, 32, 36, 115, 101, 99, 114, 101, 116, 115, 10, 116, 101, 114, 109, 105, 110, 97, 116, 111, 114, 115, 58, 10, 32, 32, 45, 32, 85, 115, 101, 114, 110, 97, 109, 101, 32, 102, 111, 114, 10, 32, 32, 45, 32, 80, 97, 115, 115, 119, 111, 114, 100, 32, 102, 111, 114, 10, 101, 114, 114, 111, 114, 115, 58, 10, 32, 32, 45, 32, 69, 114, 114, 111, 114, 10, 32, 32, 45, 32, 99, 111, 109, 109, 97, 110, 100, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 10, 32, 32, 45, 32, 105, 109, 112, 111, 114, 116, 101, 100, 32, 97, 110, 100, 32, 110, 111, 116, 32, 117, 115, 101, 100, 10, 32, 32, 45, 32, 105, 110, 32, 115, 105, 110, 103, 108, 101, 45, 118, 97, 108, 117, 101, 32, 99, 111, 110, 116, 101, 120, 116, 10, 32, 32, 45, 32, 99, 97, 110, 110, 111, 116, 32, 117, 115, 101, 10, 32, 32, 45, 32, 99, 97, 110, 39, 116, 32, 108, 111, 97, 100, 32, 112, 97, 99, 107, 97, 103, 101, 10, 32, 32, 45, 32, 101, 120, 105, 116, 32, 115, 116, 97, 116, 117, 115, 32, 49, 10, 32, 32, 45, 32, 101, 120, 101, 99, 117, 116, 97, 98, 108, 101, 32, 102, 105, 108, 101, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 10, 99, 111, 109, 109, 97, 110, 100, 115, 58, 32, 36, 99, 111, 109, 109, 97, 110, 100, 115, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/cmd.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/upload.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 32, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 114, 101, 112, 108, 97, 99, 101, 58, 32, 36, 114, 101, 112, 108, 97, 99, 101, 10, 101, 120, 112, 97, 110, 100, 58, 32, 36, 101, 120, 112, 97, 110, 100, 10, 97, 115, 115, 101, 116, 115, 58, 32, 36, 117, 112, 108, 111, 97, 100, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/upload.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/push.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 116, 97, 103, 58, 32, 36, 116, 97, 114, 103, 101, 116, 84, 97, 103, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/push.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/download.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 114, 101, 112, 108, 97, 99, 101, 58, 32, 36, 114, 101, 112, 108, 97, 99, 101, 10, 101, 120, 112, 97, 110, 100, 58, 32, 36, 101, 120, 112, 97, 110, 100, 10, 97, 115, 115, 101, 116, 115, 58, 32, 36, 100, 111, 119, 110, 108, 111, 97, 100}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/download.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/docker_run.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 99, 111, 110, 116, 97, 105, 110, 101, 114, 78, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 100, 111, 99, 107, 101, 114, 73, 109, 97, 103, 101, 10, 114, 101, 117, 115, 101, 58, 32, 36, 114, 101, 117, 115, 101, 67, 111, 110, 116, 97, 105, 110, 101, 114, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 55, 55, 50, 50, 58, 32, 50, 50, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/docker_run.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/checkout.yaml", bytes.NewReader([]byte{111, 114, 105, 103, 105, 110, 58, 32, 36, 111, 114, 105, 103, 105, 110, 10, 100, 101, 115, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/checkout.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/tag.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 115, 111, 117, 114, 99, 101, 84, 97, 103, 58, 32, 36, 115, 111, 117, 114, 99, 101, 84, 97, 103, 10, 116, 97, 114, 103, 101, 116, 84, 97, 103, 58, 32, 36, 116, 97, 114, 103, 101, 116, 84, 97, 103, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/tag.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/tag_latest.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 115, 111, 117, 114, 99, 101, 84, 97, 103, 58, 32, 36, 115, 111, 117, 114, 99, 101, 84, 97, 103, 10, 116, 97, 114, 103, 101, 116, 84, 97, 103, 58, 32, 36, 108, 97, 116, 101, 115, 116, 84, 97, 114, 103, 101, 116, 84, 97, 103, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/tag_latest.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/dockerfile.yaml", bytes.NewReader([]byte{101, 120, 112, 97, 110, 100, 58, 32, 116, 114, 117, 101, 10, 115, 111, 117, 114, 99, 101, 58, 32, 36, 100, 111, 99, 107, 101, 114, 102, 105, 108, 101, 10, 100, 101, 115, 116, 58, 10, 32, 32, 85, 82, 76, 58, 32, 36, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/dockerfile.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/build_img.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 116, 97, 103, 58, 32, 36, 115, 111, 117, 114, 99, 101, 84, 97, 103, 10, 112, 97, 116, 104, 58, 32, 36, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/build_img.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/push_latest.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 116, 97, 103, 58, 32, 36, 108, 97, 116, 101, 115, 116, 84, 97, 114, 103, 101, 116, 84, 97, 103, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/push_latest.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/login.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 114, 101, 112, 111, 115, 105, 116, 111, 114, 121, 58, 32, 36, 114, 101, 103, 105, 115, 116, 114, 121, 10, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 114, 101, 103, 105, 115, 116, 114, 121, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/login.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/req/init.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 116, 105, 109, 101, 111, 117, 116, 77, 115, 58, 32, 52, 48, 48, 48, 48, 10, 99, 111, 109, 109, 97, 110, 100, 115, 58, 10, 32, 32, 45, 32, 109, 107, 100, 105, 114, 32, 45, 112, 32, 36, 97, 112, 112, 10, 32, 32, 45, 32, 101, 99, 104, 111, 32, 39, 36, 123, 111, 114, 105, 103, 105, 110, 46, 85, 82, 76, 125, 39, 10, 32, 32, 45, 32, 97, 112, 116, 45, 103, 101, 116, 32, 117, 112, 100, 97, 116, 101, 10, 32, 32, 45, 32, 36, 123, 99, 109, 100, 91, 49, 93, 46, 115, 116, 100, 111, 117, 116, 125, 58, 47, 103, 105, 116, 47, 32, 63, 32, 32, 97, 112, 116, 45, 103, 101, 116, 32, 45, 121, 32, 105, 110, 115, 116, 97, 108, 108, 32, 103, 105, 116, 10, 32, 32, 45, 32, 36, 123, 99, 109, 100, 91, 49, 93, 46, 115, 116, 100, 111, 117, 116, 125, 58, 47, 115, 118, 110, 47, 32, 63, 32, 32, 97, 112, 116, 45, 103, 101, 116, 32, 45, 121, 32, 105, 110, 115, 116, 97, 108, 108, 32, 115, 117, 98, 118, 101, 114, 115, 105, 111, 110, 10, 32, 32, 45, 32, 97, 112, 116, 45, 103, 101, 116, 32, 45, 121, 32, 105, 110, 115, 116, 97, 108, 108, 32, 103, 99, 99, 10, 32, 32, 45, 32, 105, 102, 32, 91, 32, 45, 101, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 32, 93, 59, 32, 116, 104, 101, 110, 32, 114, 109, 32, 45, 114, 102, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 59, 32, 102, 105, 10, 32, 32, 45, 32, 109, 107, 100, 105, 114, 32, 45, 112, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/req/init.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/docker/build/build.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 44, 13, 10, 44, 44, 98, 117, 105, 108, 100, 44, 66, 117, 105, 108, 100, 32, 103, 111, 32, 97, 112, 112, 32, 105, 110, 32, 108, 105, 110, 117, 120, 32, 100, 111, 99, 107, 101, 114, 32, 99, 111, 110, 116, 97, 105, 110, 101, 114, 32, 119, 105, 116, 104, 32, 99, 117, 115, 116, 111, 109, 32, 100, 101, 112, 101, 110, 100, 101, 110, 99, 105, 101, 115, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 13, 10, 44, 44, 115, 116, 97, 114, 116, 32, 83, 83, 72, 68, 32, 100, 111, 99, 107, 101, 114, 44, 82, 117, 110, 32, 97, 110, 32, 100, 111, 99, 107, 101, 114, 44, 37, 73, 110, 105, 116, 44, 44, 13, 10, 91, 93, 73, 110, 105, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 83, 83, 72, 68, 32, 100, 111, 99, 107, 101, 114, 44, 64, 114, 101, 113, 47, 100, 111, 99, 107, 101, 114, 95, 114, 117, 110, 44, 44, 13, 10, 44, 101, 120, 101, 99, 44, 114, 117, 110, 44, 105, 110, 115, 116, 97, 108, 108, 32, 98, 97, 115, 101, 32, 112, 97, 99, 107, 97, 103, 101, 115, 44, 64, 114, 101, 113, 47, 105, 110, 105, 116, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 13, 10, 44, 44, 98, 117, 105, 108, 100, 65, 112, 112, 44, 98, 117, 105, 108, 100, 32, 97, 110, 32, 97, 112, 112, 44, 37, 66, 117, 105, 108, 100, 65, 112, 112, 44, 44, 13, 10, 91, 93, 66, 117, 105, 108, 100, 65, 112, 112, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 13, 10, 44, 115, 100, 107, 44, 115, 101, 116, 44, 115, 101, 116, 32, 115, 100, 107, 44, 64, 114, 101, 113, 47, 115, 100, 107, 44, 44, 13, 10, 44, 118, 101, 114, 115, 105, 111, 110, 47, 99, 111, 110, 116, 114, 111, 108, 44, 99, 104, 101, 99, 107, 111, 117, 116, 44, 99, 104, 101, 99, 107, 111, 117, 116, 32, 99, 111, 100, 101, 44, 64, 114, 101, 113, 47, 99, 104, 101, 99, 107, 111, 117, 116, 44, 36, 111, 114, 105, 103, 105, 110, 46, 85, 82, 76, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 117, 112, 108, 111, 97, 100, 32, 99, 117, 115, 116, 111, 109, 32, 97, 115, 115, 101, 116, 115, 44, 64, 114, 101, 113, 47, 117, 112, 108, 111, 97, 100, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 117, 112, 108, 111, 97, 100, 41, 32, 62, 32, 48, 44, 13, 10, 44, 101, 120, 101, 99, 44, 114, 117, 110, 44, 114, 117, 110, 32, 99, 111, 109, 109, 97, 110, 100, 115, 44, 64, 114, 101, 113, 47, 99, 109, 100, 44, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 100, 111, 119, 110, 108, 111, 97, 100, 32, 99, 117, 115, 116, 111, 109, 32, 97, 115, 115, 101, 116, 115, 44, 64, 114, 101, 113, 47, 100, 111, 119, 110, 108, 111, 97, 100, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 100, 111, 119, 110, 108, 111, 97, 100, 41, 32, 62, 32, 48, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 87, 104, 101, 110, 44, 13, 10, 44, 44, 98, 117, 105, 108, 100, 73, 109, 103, 44, 98, 117, 105, 108, 100, 32, 97, 112, 112, 32, 105, 109, 97, 103, 101, 44, 37, 66, 117, 105, 108, 100, 73, 109, 103, 44, 36, 72, 97, 115, 82, 101, 115, 111, 117, 114, 99, 101, 40, 36, 123, 100, 111, 99, 107, 101, 114, 102, 105, 108, 101, 46, 85, 82, 76, 125, 41, 58, 116, 114, 117, 101, 44, 13, 10, 91, 93, 66, 117, 105, 108, 100, 73, 109, 103, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 71, 114, 111, 117, 112, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 100, 111, 119, 110, 108, 111, 97, 100, 32, 98, 117, 105, 108, 100, 32, 100, 111, 99, 107, 101, 114, 102, 105, 108, 101, 32, 44, 32, 64, 114, 101, 113, 47, 100, 111, 99, 107, 101, 114, 102, 105, 108, 101, 44, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 98, 117, 105, 108, 100, 44, 98, 117, 105, 108, 100, 32, 97, 112, 112, 32, 100, 111, 99, 107, 101, 114, 32, 105, 109, 97, 103, 101, 44, 32, 64, 114, 101, 113, 47, 98, 117, 105, 108, 100, 95, 105, 109, 103, 44, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 116, 97, 103, 44, 116, 97, 103, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 32, 105, 109, 97, 103, 101, 44, 32, 64, 114, 101, 113, 47, 116, 97, 103, 95, 108, 97, 116, 101, 115, 116, 44, 36, 116, 97, 103, 76, 97, 116, 101, 115, 116, 58, 116, 114, 117, 101, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 108, 111, 103, 105, 110, 44, 108, 111, 103, 105, 110, 32, 116, 111, 32, 100, 111, 99, 107, 101, 114, 32, 114, 101, 103, 105, 115, 116, 114, 121, 44, 32, 64, 114, 101, 113, 47, 108, 111, 103, 105, 110, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 58, 116, 114, 117, 101, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 116, 97, 103, 44, 116, 97, 103, 32, 97, 112, 112, 32, 105, 109, 97, 103, 101, 44, 32, 64, 114, 101, 113, 47, 116, 97, 103, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 58, 116, 114, 117, 101, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 116, 97, 103, 44, 116, 97, 103, 32, 108, 97, 116, 101, 115, 116, 32, 97, 112, 112, 32, 105, 109, 97, 103, 101, 44, 32, 64, 114, 101, 113, 47, 116, 97, 103, 95, 108, 97, 116, 101, 115, 116, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 61, 116, 114, 117, 101, 32, 38, 38, 32, 36, 116, 97, 103, 76, 97, 116, 101, 115, 116, 61, 116, 114, 117, 101, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 112, 117, 115, 104, 44, 112, 117, 115, 104, 32, 100, 111, 99, 107, 101, 114, 32, 105, 109, 97, 103, 101, 32, 116, 111, 32, 114, 101, 103, 105, 115, 116, 114, 121, 44, 32, 64, 114, 101, 113, 47, 112, 117, 115, 104, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 58, 116, 114, 117, 101, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 112, 117, 115, 104, 44, 112, 117, 115, 104, 32, 100, 111, 99, 107, 101, 114, 32, 105, 109, 97, 103, 101, 32, 116, 111, 32, 114, 101, 103, 105, 115, 116, 114, 121, 44, 32, 64, 114, 101, 113, 47, 112, 117, 115, 104, 95, 108, 97, 116, 101, 115, 116, 44, 36, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 61, 116, 114, 117, 101, 32, 38, 38, 32, 36, 116, 97, 103, 76, 97, 116, 101, 115, 116, 61, 116, 114, 117, 101, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/docker/build/build.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/deploy/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 112, 112, 82, 111, 111, 116, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 97, 112, 112, 82, 111, 111, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 111, 112, 116, 47, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 117, 112, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 93, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 117, 112, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 110, 105, 116, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 105, 110, 105, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 34, 109, 107, 100, 105, 114, 32, 45, 112, 32, 36, 100, 101, 112, 108, 111, 121, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 99, 104, 109, 111, 100, 32, 43, 120, 32, 36, 100, 101, 112, 108, 111, 121, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 99, 104, 111, 119, 110, 32, 36, 111, 115, 46, 117, 115, 101, 114, 32, 32, 36, 100, 101, 112, 108, 111, 121, 80, 97, 116, 104, 34, 10, 32, 32, 32, 32, 93, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 109, 109, 97, 110, 100, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 109, 109, 97, 110, 100, 115, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 93, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 114, 101, 108, 101, 97, 115, 101, 47, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 117, 112, 101, 114, 85, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 80, 97, 114, 97, 109, 115, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 117, 112, 101, 114, 85, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 102, 97, 108, 115, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 112, 108, 97, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 112, 108, 97, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 120, 112, 97, 110, 100, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 120, 112, 97, 110, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 116, 97, 114, 116, 67, 109, 100, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 116, 97, 114, 116, 67, 109, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/deploy/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/deploy/req/cmd.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 116, 105, 109, 101, 111, 117, 116, 77, 115, 58, 32, 54, 48, 48, 48, 48, 10, 115, 117, 112, 101, 114, 85, 115, 101, 114, 58, 32, 36, 115, 117, 112, 101, 114, 85, 115, 101, 114, 10, 101, 114, 114, 111, 114, 115, 58, 10, 32, 32, 45, 32, 69, 114, 114, 111, 114, 10, 32, 32, 45, 32, 99, 111, 109, 109, 97, 110, 100, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 10, 32, 32, 45, 32, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 10, 99, 111, 109, 109, 97, 110, 100, 115, 58, 32, 36, 99, 111, 109, 109, 97, 110, 100, 115, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/deploy/req/cmd.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/deploy/req/upload.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 32, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 114, 101, 112, 108, 97, 99, 101, 58, 32, 36, 114, 101, 112, 108, 97, 99, 101, 10, 101, 120, 112, 97, 110, 100, 58, 32, 36, 101, 120, 112, 97, 110, 100, 10, 97, 115, 115, 101, 116, 115, 58, 32, 36, 117, 112, 108, 111, 97, 100, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/deploy/req/upload.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/deploy/req/start.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 100, 105, 114, 101, 99, 116, 111, 114, 121, 58, 32, 36, 97, 112, 112, 80, 97, 116, 104, 10, 105, 109, 109, 117, 110, 101, 84, 111, 72, 97, 110, 103, 117, 112, 115, 58, 32, 116, 114, 117, 101, 10, 99, 111, 109, 109, 97, 110, 100, 58, 32, 36, 115, 116, 97, 114, 116, 67, 109, 100, 10, 97, 114, 103, 117, 109, 101, 110, 116, 115, 58, 32, 36, 115, 116, 97, 114, 116, 65, 114, 103, 115}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/deploy/req/start.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/deploy/req/stop.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 105, 110, 112, 117, 116, 58, 32, 36, 123, 97, 112, 112, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/deploy/req/stop.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/deploy/req/init.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 116, 105, 109, 101, 111, 117, 116, 77, 115, 58, 32, 52, 48, 48, 48, 48, 10, 115, 117, 112, 101, 114, 85, 115, 101, 114, 58, 32, 116, 114, 117, 101, 10, 99, 111, 109, 109, 97, 110, 100, 115, 58, 32, 36, 105, 110, 105, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/deploy/req/init.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/deploy/deploy.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 13, 10, 44, 44, 100, 101, 112, 108, 111, 121, 44, 100, 101, 112, 108, 111, 121, 32, 97, 112, 112, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 98, 117, 105, 108, 100, 44, 82, 117, 110, 32, 97, 110, 32, 97, 99, 116, 105, 111, 110, 44, 37, 66, 117, 105, 108, 100, 44, 13, 10, 91, 93, 66, 117, 105, 108, 100, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 13, 10, 44, 101, 120, 101, 99, 44, 114, 117, 110, 44, 105, 110, 105, 116, 32, 112, 114, 111, 99, 101, 115, 115, 44, 64, 114, 101, 113, 47, 105, 110, 105, 116, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 105, 110, 105, 116, 41, 32, 62, 32, 48, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 117, 112, 108, 111, 97, 100, 32, 99, 117, 115, 116, 111, 109, 32, 97, 115, 115, 101, 116, 115, 44, 64, 114, 101, 113, 47, 117, 112, 108, 111, 97, 100, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 117, 112, 108, 111, 97, 100, 41, 32, 62, 32, 48, 13, 10, 44, 101, 120, 101, 99, 44, 114, 117, 110, 44, 114, 117, 110, 32, 99, 111, 109, 109, 97, 110, 100, 115, 44, 64, 114, 101, 113, 47, 99, 109, 100, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 99, 111, 109, 109, 97, 110, 100, 115, 41, 32, 62, 32, 48, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 97, 112, 112, 44, 37, 83, 116, 111, 112, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 13, 10, 44, 112, 114, 111, 99, 101, 115, 115, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 97, 112, 112, 44, 64, 114, 101, 113, 47, 115, 116, 111, 112, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 97, 112, 112, 44, 37, 83, 116, 97, 114, 116, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 13, 10, 44, 112, 114, 111, 99, 101, 115, 115, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 97, 112, 112, 44, 64, 114, 101, 113, 47, 115, 116, 97, 114, 116, 44, 36, 115, 116, 97, 114, 116, 67, 109, 100, 13, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/deploy/deploy.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/README.md", bytes.NewReader([]byte{35, 35, 35, 32, 65, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 32, 119, 111, 114, 107, 102, 108, 111, 119, 115, 10, 10, 80, 114, 101, 100, 101, 102, 105, 110, 101, 100, 32, 116, 111, 32, 101, 97, 115, 121, 32, 98, 117, 105, 108, 100, 32, 97, 110, 100, 32, 100, 101, 112, 108, 111, 121, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 46, 10, 10, 45, 32, 91, 65, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 32, 98, 117, 105, 108, 100, 32, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 93, 40, 35, 98, 117, 105, 108, 100, 41, 10, 45, 32, 91, 65, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 32, 98, 117, 105, 108, 100, 32, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 32, 111, 110, 32, 100, 111, 99, 107, 101, 114, 93, 40, 35, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 41, 10, 10, 10, 42, 42, 66, 117, 105, 108, 100, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 58, 42, 42, 10, 10, 84, 111, 32, 101, 110, 97, 98, 108, 101, 32, 102, 108, 101, 120, 105, 98, 108, 101, 32, 98, 117, 105, 108, 100, 32, 97, 110, 100, 32, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 32, 114, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 108, 101, 103, 97, 116, 105, 111, 110, 44, 32, 98, 117, 105, 108, 100, 32, 119, 111, 114, 107, 102, 108, 111, 119, 115, 32, 117, 115, 101, 32, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 32, 114, 101, 115, 111, 117, 114, 99, 101, 58, 10, 10, 111, 114, 105, 103, 105, 110, 32, 45, 32, 118, 101, 114, 115, 105, 111, 110, 32, 99, 111, 110, 116, 114, 111, 108, 32, 111, 114, 105, 103, 105, 110, 32, 111, 114, 32, 115, 111, 109, 101, 32, 110, 111, 110, 32, 115, 111, 117, 114, 99, 101, 32, 99, 111, 110, 116, 114, 111, 108, 32, 109, 97, 110, 97, 103, 101, 100, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 40, 105, 46, 101, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 41, 10, 116, 97, 114, 103, 101, 116, 32, 45, 32, 104, 111, 115, 116, 32, 114, 101, 115, 111, 117, 114, 99, 101, 32, 119, 104, 101, 114, 101, 32, 101, 110, 100, 108, 121, 32, 114, 117, 110, 115, 32, 40, 117, 115, 117, 97, 108, 108, 121, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 32, 119, 105, 116, 104, 32, 108, 111, 99, 97, 108, 104, 111, 115, 116, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 41, 10, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 32, 32, 45, 32, 104, 111, 115, 116, 32, 114, 101, 115, 111, 117, 114, 99, 101, 32, 119, 104, 101, 114, 101, 32, 97, 112, 112, 32, 105, 115, 32, 98, 101, 105, 110, 103, 32, 98, 117, 105, 108, 116, 10, 97, 112, 112, 84, 97, 114, 103, 101, 116, 32, 45, 32, 104, 111, 115, 116, 32, 119, 104, 101, 114, 101, 32, 97, 112, 112, 32, 105, 115, 32, 100, 101, 112, 108, 111, 121, 101, 100, 32, 97, 110, 100, 32, 114, 117, 110, 115, 10, 10, 73, 102, 32, 110, 111, 116, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 32, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 32, 97, 110, 100, 32, 97, 112, 112, 84, 97, 114, 103, 101, 116, 32, 117, 115, 101, 32, 116, 97, 114, 103, 101, 116, 46, 10, 84, 97, 114, 103, 101, 116, 32, 105, 115, 32, 108, 111, 99, 97, 108, 104, 111, 115, 116, 32, 98, 121, 32, 100, 101, 102, 97, 117, 108, 116, 46, 10, 10, 10, 60, 97, 32, 110, 97, 109, 101, 61, 34, 98, 117, 105, 108, 100, 34, 62, 60, 47, 97, 62, 10, 35, 35, 32, 65, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 32, 98, 117, 105, 108, 100, 32, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 10, 10, 10, 72, 101, 114, 101, 32, 97, 114, 101, 32, 116, 104, 101, 32, 98, 97, 115, 105, 99, 32, 115, 116, 101, 112, 32, 119, 105, 116, 104, 32, 91, 98, 117, 105, 108, 100, 93, 40, 98, 117, 105, 108, 100, 47, 98, 117, 105, 108, 100, 46, 99, 115, 118, 41, 32, 97, 110, 100, 32, 91, 100, 101, 112, 108, 111, 121, 93, 40, 100, 101, 112, 108, 111, 121, 47, 100, 101, 112, 108, 111, 121, 46, 99, 115, 118, 41, 32, 119, 111, 114, 107, 102, 108, 111, 119, 115, 46, 10, 10, 49, 41, 32, 66, 117, 105, 108, 100, 10, 45, 32, 99, 114, 101, 97, 116, 101, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 32, 40, 100, 101, 102, 97, 117, 108, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 58, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 98, 117, 105, 108, 100, 47, 41, 10, 45, 32, 99, 104, 101, 99, 107, 111, 117, 116, 32, 99, 111, 100, 101, 32, 40, 102, 114, 111, 109, 32, 115, 111, 117, 114, 99, 101, 32, 99, 111, 110, 116, 114, 111, 108, 32, 111, 114, 32, 108, 111, 99, 97, 108, 32, 114, 101, 115, 111, 117, 114, 99, 101, 32, 41, 32, 116, 111, 32, 98, 117, 105, 108, 100, 32, 104, 111, 115, 116, 10, 45, 32, 115, 101, 116, 32, 83, 68, 75, 10, 45, 32, 117, 112, 108, 111, 97, 100, 32, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 97, 115, 115, 101, 116, 115, 32, 116, 111, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 32, 40, 100, 101, 102, 97, 117, 108, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 58, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 98, 117, 105, 108, 100, 47, 41, 10, 45, 32, 100, 111, 119, 110, 108, 111, 97, 100, 32, 98, 117, 105, 108, 100, 32, 99, 111, 109, 109, 97, 110, 100, 115, 10, 45, 32, 100, 111, 119, 110, 108, 111, 97, 100, 105, 110, 103, 32, 98, 117, 105, 108, 100, 32, 97, 112, 112, 32, 97, 110, 100, 32, 111, 116, 104, 101, 114, 32, 97, 115, 115, 101, 116, 115, 32, 116, 111, 32, 36, 116, 97, 114, 103, 101, 116, 32, 114, 101, 108, 101, 97, 115, 101, 32, 112, 97, 116, 104, 32, 32, 40, 100, 101, 102, 97, 117, 108, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 58, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 114, 101, 108, 101, 97, 115, 101, 47, 41, 10, 50, 41, 32, 68, 101, 112, 108, 111, 121, 10, 45, 32, 99, 114, 101, 97, 116, 101, 32, 97, 112, 112, 80, 97, 116, 104, 32, 40, 100, 101, 102, 97, 117, 108, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 58, 47, 111, 112, 116, 47, 36, 123, 97, 112, 112, 125, 47, 41, 10, 45, 32, 117, 112, 108, 111, 97, 100, 32, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 32, 102, 114, 111, 109, 32, 36, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 32, 116, 111, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 45, 32, 115, 116, 111, 112, 32, 97, 112, 112, 32, 40, 105, 102, 32, 112, 114, 101, 118, 105, 111, 117, 115, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 105, 115, 32, 115, 116, 105, 108, 108, 32, 114, 117, 110, 110, 105, 110, 103, 41, 10, 45, 32, 115, 116, 97, 114, 116, 32, 97, 112, 112, 10, 10, 72, 101, 114, 101, 32, 105, 115, 32, 101, 120, 97, 109, 112, 108, 101, 32, 101, 120, 101, 99, 117, 116, 105, 111, 110, 32, 111, 102, 32, 91, 98, 117, 105, 108, 100, 93, 40, 98, 117, 105, 108, 100, 47, 98, 117, 105, 108, 100, 46, 99, 115, 118, 41, 32, 97, 110, 100, 32, 91, 100, 101, 112, 108, 111, 121, 93, 40, 100, 101, 112, 108, 111, 121, 47, 100, 101, 112, 108, 111, 121, 46, 99, 115, 118, 41, 32, 119, 111, 114, 107, 102, 108, 111, 119, 115, 32, 118, 105, 32, 105, 110, 108, 105, 110, 101, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 114, 61, 97, 112, 112, 46, 121, 97, 109, 108, 32, 45, 116, 61, 39, 42, 39, 10, 96, 96, 96, 10, 10, 10, 64, 97, 112, 112, 46, 121, 97, 109, 108, 10, 96, 96, 96, 121, 97, 109, 108, 10, 116, 97, 115, 107, 115, 58, 32, 36, 116, 97, 115, 107, 115, 10, 100, 101, 102, 97, 117, 108, 116, 115, 58, 10, 32, 32, 97, 112, 112, 58, 32, 36, 97, 112, 112, 10, 32, 32, 115, 100, 107, 58, 32, 36, 115, 100, 107, 10, 32, 32, 116, 97, 114, 103, 101, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 32, 32, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 32, 32, 97, 112, 112, 84, 97, 114, 103, 101, 116, 58, 32, 36, 97, 112, 112, 84, 97, 114, 103, 101, 116, 10, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 97, 112, 112, 47, 98, 117, 105, 108, 100, 10, 32, 32, 32, 32, 111, 114, 105, 103, 105, 110, 58, 10, 32, 32, 32, 32, 32, 32, 85, 82, 76, 58, 32, 46, 47, 46, 46, 47, 10, 32, 32, 32, 32, 99, 111, 109, 109, 97, 110, 100, 115, 58, 10, 32, 32, 32, 32, 32, 32, 45, 32, 99, 100, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 47, 97, 112, 112, 10, 32, 32, 32, 32, 32, 32, 45, 32, 103, 111, 32, 103, 101, 116, 32, 45, 117, 32, 46, 10, 32, 32, 32, 32, 32, 32, 45, 32, 103, 111, 32, 98, 117, 105, 108, 100, 32, 45, 111, 32, 36, 97, 112, 112, 10, 32, 32, 32, 32, 32, 32, 45, 32, 99, 104, 109, 111, 100, 32, 43, 120, 32, 36, 97, 112, 112, 10, 32, 32, 32, 32, 100, 111, 119, 110, 108, 111, 97, 100, 58, 10, 32, 32, 32, 32, 32, 32, 47, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 47, 97, 112, 112, 47, 36, 123, 97, 112, 112, 125, 58, 32, 36, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 10, 32, 32, 32, 32, 32, 32, 47, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 47, 101, 110, 100, 108, 121, 47, 99, 111, 110, 102, 105, 103, 47, 99, 111, 110, 102, 105, 103, 46, 106, 115, 111, 110, 58, 32, 36, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 10, 10, 32, 32, 100, 101, 112, 108, 111, 121, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 97, 112, 112, 47, 100, 101, 112, 108, 111, 121, 10, 32, 32, 32, 32, 105, 110, 105, 116, 58, 10, 32, 32, 32, 32, 32, 32, 45, 32, 109, 107, 100, 105, 114, 32, 45, 112, 32, 36, 97, 112, 112, 80, 97, 116, 104, 10, 32, 32, 32, 32, 32, 32, 45, 32, 109, 107, 100, 105, 114, 32, 45, 112, 32, 36, 97, 112, 112, 80, 97, 116, 104, 47, 99, 111, 110, 102, 105, 103, 10, 32, 32, 32, 32, 32, 32, 45, 32, 99, 104, 111, 119, 110, 32, 45, 82, 32, 36, 123, 111, 115, 46, 117, 115, 101, 114, 125, 32, 36, 97, 112, 112, 80, 97, 116, 104, 10, 32, 32, 32, 32, 117, 112, 108, 111, 97, 100, 58, 10, 32, 32, 32, 32, 32, 32, 36, 123, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 125, 47, 36, 123, 97, 112, 112, 125, 58, 32, 36, 97, 112, 112, 80, 97, 116, 104, 10, 32, 32, 32, 32, 32, 32, 36, 123, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 125, 47, 99, 111, 110, 102, 105, 103, 46, 106, 115, 111, 110, 58, 32, 36, 97, 112, 112, 80, 97, 116, 104, 10, 32, 32, 32, 32, 99, 111, 109, 109, 97, 110, 100, 115, 58, 10, 32, 32, 32, 32, 32, 32, 45, 32, 101, 99, 104, 111, 32, 39, 100, 101, 112, 108, 111, 121, 101, 100, 39, 10, 10, 32, 32, 115, 116, 111, 112, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 112, 114, 111, 99, 101, 115, 115, 58, 115, 116, 111, 112, 45, 97, 108, 108, 10, 32, 32, 32, 32, 105, 110, 112, 117, 116, 58, 32, 36, 123, 97, 112, 112, 125, 10, 10, 32, 32, 115, 116, 97, 114, 116, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 112, 114, 111, 99, 101, 115, 115, 58, 115, 116, 97, 114, 116, 10, 32, 32, 32, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 58, 32, 36, 97, 112, 112, 80, 97, 116, 104, 10, 32, 32, 32, 32, 105, 109, 109, 117, 110, 101, 84, 111, 72, 97, 110, 103, 117, 112, 115, 58, 32, 116, 114, 117, 101, 10, 32, 32, 32, 32, 99, 111, 109, 109, 97, 110, 100, 58, 32, 46, 47, 36, 123, 97, 112, 112, 125, 10, 32, 32, 32, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 58, 10, 32, 32, 32, 32, 32, 32, 45, 32, 34, 45, 99, 111, 110, 102, 105, 103, 34, 10, 32, 32, 32, 32, 32, 32, 45, 32, 34, 99, 111, 110, 102, 105, 103, 46, 106, 115, 111, 110, 34, 10, 10, 96, 96, 96, 10, 10, 60, 97, 32, 110, 97, 109, 101, 61, 34, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 34, 62, 60, 47, 97, 62, 10, 35, 35, 32, 65, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 32, 98, 117, 105, 108, 100, 32, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 32, 111, 110, 32, 100, 111, 99, 107, 101, 114, 10, 10, 10, 10, 72, 101, 114, 101, 32, 97, 114, 101, 32, 116, 104, 101, 32, 98, 97, 115, 105, 99, 32, 115, 116, 101, 112, 32, 119, 105, 116, 104, 32, 91, 98, 117, 105, 108, 100, 93, 40, 100, 111, 99, 107, 101, 114, 47, 98, 117, 105, 108, 100, 47, 98, 117, 105, 108, 100, 46, 99, 115, 118, 41, 32, 97, 110, 100, 32, 91, 100, 101, 112, 108, 111, 121, 93, 40, 100, 111, 99, 107, 101, 114, 47, 100, 101, 112, 108, 111, 121, 47, 100, 101, 112, 108, 111, 121, 46, 99, 115, 118, 41, 32, 119, 111, 114, 107, 102, 108, 111, 119, 115, 46, 10, 10, 49, 41, 32, 66, 117, 105, 108, 100, 10, 45, 32, 108, 97, 117, 110, 99, 104, 101, 115, 32, 117, 98, 117, 110, 116, 117, 32, 100, 111, 99, 107, 101, 114, 32, 119, 105, 116, 104, 32, 83, 83, 72, 32, 115, 101, 114, 118, 105, 99, 101, 32, 101, 110, 97, 98, 108, 101, 100, 32, 97, 115, 32, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 45, 32, 99, 104, 101, 99, 107, 111, 117, 116, 32, 99, 111, 100, 101, 32, 40, 102, 114, 111, 109, 32, 115, 111, 117, 114, 99, 101, 32, 99, 111, 110, 116, 114, 111, 108, 32, 111, 114, 32, 108, 111, 99, 97, 108, 32, 114, 101, 115, 111, 117, 114, 99, 101, 32, 41, 32, 116, 111, 32, 98, 117, 105, 108, 100, 32, 104, 111, 115, 116, 10, 45, 32, 115, 101, 116, 32, 83, 68, 75, 10, 45, 32, 117, 112, 108, 111, 97, 100, 32, 97, 100, 100, 105, 116, 105, 111, 110, 97, 108, 32, 97, 115, 115, 101, 116, 115, 32, 116, 111, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 32, 40, 100, 101, 102, 97, 117, 108, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 58, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 98, 117, 105, 108, 100, 47, 41, 10, 45, 32, 100, 111, 119, 110, 108, 111, 97, 100, 32, 98, 117, 105, 108, 100, 32, 99, 111, 109, 109, 97, 110, 100, 115, 10, 45, 32, 100, 111, 119, 110, 108, 111, 97, 100, 105, 110, 103, 32, 98, 117, 105, 108, 100, 32, 97, 112, 112, 32, 97, 110, 100, 32, 111, 116, 104, 101, 114, 32, 97, 115, 115, 101, 116, 115, 32, 116, 111, 32, 36, 116, 97, 114, 103, 101, 116, 32, 114, 101, 108, 101, 97, 115, 101, 32, 112, 97, 116, 104, 32, 32, 40, 100, 101, 102, 97, 117, 108, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 58, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 114, 101, 108, 101, 97, 115, 101, 47, 41, 10, 45, 32, 105, 102, 32, 100, 111, 99, 107, 101, 114, 102, 105, 108, 101, 32, 105, 115, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 111, 114, 32, 99, 111, 110, 102, 105, 103, 47, 68, 111, 99, 107, 101, 114, 102, 105, 108, 101, 32, 105, 115, 32, 112, 114, 101, 115, 101, 110, 116, 32, 116, 104, 101, 110, 32, 105, 116, 32, 98, 117, 105, 108, 100, 32, 97, 112, 112, 32, 100, 111, 99, 107, 101, 114, 32, 105, 109, 97, 103, 101, 10, 45, 32, 116, 97, 103, 32, 105, 109, 97, 103, 101, 32, 97, 110, 100, 32, 100, 101, 112, 108, 111, 121, 32, 105, 116, 32, 100, 111, 99, 107, 101, 114, 32, 114, 101, 103, 105, 115, 116, 114, 121, 32, 105, 102, 32, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 32, 105, 115, 32, 115, 101, 116, 32, 116, 111, 32, 116, 114, 117, 101, 10, 10, 50, 41, 32, 68, 101, 112, 108, 111, 121, 10, 45, 32, 111, 112, 116, 105, 111, 110, 97, 108, 108, 121, 32, 108, 111, 103, 105, 110, 32, 116, 111, 32, 100, 111, 99, 107, 101, 114, 32, 114, 101, 103, 105, 115, 116, 114, 121, 32, 40, 105, 102, 32, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 32, 102, 108, 97, 103, 32, 105, 115, 32, 115, 101, 116, 41, 10, 45, 32, 115, 116, 111, 112, 32, 97, 112, 112, 32, 100, 111, 99, 107, 101, 114, 32, 99, 111, 110, 116, 97, 105, 110, 101, 114, 32, 40, 105, 102, 32, 112, 114, 101, 118, 105, 111, 117, 115, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 105, 115, 32, 115, 116, 105, 108, 108, 32, 114, 117, 110, 110, 105, 110, 103, 41, 10, 45, 32, 114, 117, 110, 32, 100, 111, 99, 107, 101, 114, 10, 10, 10, 10, 96, 96, 96, 121, 97, 109, 108, 10, 116, 97, 115, 107, 115, 58, 32, 36, 116, 97, 115, 107, 115, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 97, 112, 112, 58, 32, 101, 99, 104, 111, 10, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 48, 46, 49, 10, 32, 32, 115, 100, 107, 58, 32, 103, 111, 58, 49, 46, 56, 10, 32, 32, 114, 101, 103, 105, 115, 116, 114, 121, 85, 115, 101, 114, 110, 97, 109, 101, 58, 32, 101, 110, 100, 108, 121, 10, 32, 32, 114, 101, 103, 105, 115, 116, 114, 121, 58, 32, 105, 110, 100, 101, 120, 46, 100, 111, 99, 107, 101, 114, 46, 105, 111, 47, 101, 110, 100, 108, 121, 10, 32, 32, 117, 115, 101, 82, 101, 103, 105, 115, 116, 114, 121, 58, 32, 102, 97, 108, 115, 101, 10, 100, 101, 102, 97, 117, 108, 116, 115, 58, 10, 32, 32, 97, 112, 112, 58, 32, 36, 97, 112, 112, 10, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 36, 118, 101, 114, 115, 105, 111, 110, 10, 32, 32, 115, 100, 107, 58, 32, 36, 115, 100, 107, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 97, 112, 112, 47, 100, 111, 99, 107, 101, 114, 47, 98, 117, 105, 108, 100, 10, 32, 32, 32, 32, 111, 114, 105, 103, 105, 110, 58, 10, 32, 32, 32, 32, 32, 32, 85, 82, 76, 58, 32, 104, 116, 116, 112, 115, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 97, 100, 114, 105, 97, 110, 119, 105, 116, 47, 101, 99, 104, 111, 10, 32, 32, 32, 32, 99, 111, 109, 109, 97, 110, 100, 115, 58, 10, 32, 32, 32, 32, 32, 32, 45, 32, 97, 112, 116, 45, 103, 101, 116, 32, 45, 121, 32, 105, 110, 115, 116, 97, 108, 108, 32, 116, 101, 108, 110, 101, 116, 10, 32, 32, 32, 32, 32, 32, 45, 32, 99, 100, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 47, 97, 112, 112, 10, 32, 32, 32, 32, 32, 32, 45, 32, 103, 111, 32, 103, 101, 116, 32, 45, 117, 32, 46, 10, 32, 32, 32, 32, 32, 32, 45, 32, 101, 120, 112, 111, 114, 116, 32, 67, 71, 79, 95, 69, 78, 65, 66, 76, 69, 68, 61, 48, 10, 32, 32, 32, 32, 32, 32, 45, 32, 103, 111, 32, 98, 117, 105, 108, 100, 32, 45, 111, 32, 36, 97, 112, 112, 10, 32, 32, 32, 32, 32, 32, 45, 32, 99, 104, 109, 111, 100, 32, 43, 120, 32, 36, 97, 112, 112, 10, 32, 32, 32, 32, 100, 111, 119, 110, 108, 111, 97, 100, 58, 10, 32, 32, 32, 32, 32, 32, 47, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 47, 36, 123, 97, 112, 112, 125, 58, 32, 36, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 10, 32, 32, 115, 116, 111, 112, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 100, 111, 99, 107, 101, 114, 58, 115, 116, 111, 112, 45, 105, 109, 97, 103, 101, 115, 10, 32, 32, 32, 32, 105, 109, 97, 103, 101, 115, 58, 10, 32, 32, 32, 32, 45, 32, 116, 101, 115, 116, 65, 112, 112, 10, 32, 32, 100, 101, 112, 108, 111, 121, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 97, 112, 112, 47, 100, 111, 99, 107, 101, 114, 47, 100, 101, 112, 108, 111, 121, 10, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 116, 101, 115, 116, 65, 112, 112, 10, 32, 32, 32, 32, 112, 111, 114, 116, 115, 58, 10, 32, 32, 32, 32, 32, 32, 34, 56, 48, 56, 48, 34, 58, 32, 34, 56, 48, 56, 48, 34, 10, 10, 96, 96, 96}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 97, 112, 112, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 111, 114, 105, 103, 105, 110, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 112, 108, 97, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 112, 108, 97, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 120, 112, 97, 110, 100, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 120, 112, 97, 110, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 117, 112, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 117, 112, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 93, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 100, 111, 119, 110, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 93, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 100, 111, 119, 110, 108, 111, 97, 100, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 110, 105, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 34, 105, 102, 32, 91, 32, 45, 101, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 32, 93, 59, 32, 116, 104, 101, 110, 32, 114, 109, 32, 45, 114, 102, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 59, 32, 102, 105, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 109, 107, 100, 105, 114, 32, 45, 112, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 99, 104, 109, 111, 100, 32, 43, 120, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 99, 104, 111, 119, 110, 32, 36, 111, 115, 46, 117, 115, 101, 114, 32, 32, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 34, 10, 32, 32, 32, 32, 93, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 105, 110, 105, 116, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 117, 112, 101, 114, 85, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 80, 97, 114, 97, 109, 115, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 117, 112, 101, 114, 85, 115, 101, 114, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 102, 97, 108, 115, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 109, 109, 97, 110, 100, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 109, 109, 97, 110, 100, 115, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 98, 117, 105, 108, 100, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 98, 117, 105, 108, 100, 47, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 108, 101, 97, 115, 101, 80, 97, 116, 104, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 97, 112, 112, 125, 47, 114, 101, 108, 101, 97, 115, 101, 47, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 85, 82, 76, 74, 111, 105, 110, 40, 91, 92, 34, 36, 123, 116, 97, 114, 103, 101, 116, 46, 85, 82, 76, 125, 92, 34, 44, 92, 34, 36, 98, 117, 105, 108, 100, 80, 97, 116, 104, 92, 34, 93, 41, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 46, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 99, 114, 101, 116, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 99, 114, 101, 116, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/req/sdk.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 115, 100, 107, 58, 32, 36, 115, 100, 107}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/req/sdk.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/req/cmd.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 116, 105, 109, 101, 111, 117, 116, 77, 115, 58, 32, 50, 52, 48, 48, 48, 48, 10, 115, 117, 112, 101, 114, 85, 115, 101, 114, 58, 32, 36, 115, 117, 112, 101, 114, 85, 115, 101, 114, 10, 115, 101, 99, 114, 101, 116, 115, 58, 32, 36, 115, 101, 99, 114, 101, 116, 115, 10, 116, 101, 114, 109, 105, 110, 97, 116, 111, 114, 115, 58, 10, 32, 32, 45, 32, 85, 115, 101, 114, 110, 97, 109, 101, 32, 102, 111, 114, 10, 32, 32, 45, 32, 80, 97, 115, 115, 119, 111, 114, 100, 32, 102, 111, 114, 10, 101, 114, 114, 111, 114, 115, 58, 10, 32, 32, 45, 32, 69, 114, 114, 111, 114, 10, 32, 32, 45, 32, 99, 111, 109, 109, 97, 110, 100, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 10, 32, 32, 45, 32, 105, 109, 112, 111, 114, 116, 101, 100, 32, 97, 110, 100, 32, 110, 111, 116, 32, 117, 115, 101, 100, 10, 32, 32, 45, 32, 105, 110, 32, 115, 105, 110, 103, 108, 101, 45, 118, 97, 108, 117, 101, 32, 99, 111, 110, 116, 101, 120, 116, 10, 32, 32, 45, 32, 99, 97, 110, 110, 111, 116, 32, 117, 115, 101, 10, 32, 32, 45, 32, 99, 97, 110, 39, 116, 32, 108, 111, 97, 100, 32, 112, 97, 99, 107, 97, 103, 101, 10, 32, 32, 45, 32, 101, 120, 105, 116, 32, 115, 116, 97, 116, 117, 115, 32, 49, 10, 32, 32, 45, 32, 101, 120, 101, 99, 117, 116, 97, 98, 108, 101, 32, 102, 105, 108, 101, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 10, 99, 111, 109, 109, 97, 110, 100, 115, 58, 32, 36, 99, 111, 109, 109, 97, 110, 100, 115, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/req/cmd.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/req/upload.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 32, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 114, 101, 112, 108, 97, 99, 101, 58, 32, 36, 114, 101, 112, 108, 97, 99, 101, 10, 101, 120, 112, 97, 110, 100, 58, 32, 36, 101, 120, 112, 97, 110, 100, 10, 97, 115, 115, 101, 116, 115, 58, 32, 36, 117, 112, 108, 111, 97, 100, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/req/upload.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/req/download.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 114, 101, 112, 108, 97, 99, 101, 58, 32, 36, 114, 101, 112, 108, 97, 99, 101, 10, 101, 120, 112, 97, 110, 100, 58, 32, 36, 101, 120, 112, 97, 110, 100, 10, 97, 115, 115, 101, 116, 115, 58, 32, 36, 100, 111, 119, 110, 108, 111, 97, 100}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/req/download.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/req/checkout.yaml", bytes.NewReader([]byte{111, 114, 105, 103, 105, 110, 58, 32, 36, 111, 114, 105, 103, 105, 110, 10, 100, 101, 115, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/req/checkout.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/req/init.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 116, 105, 109, 101, 111, 117, 116, 77, 115, 58, 32, 52, 48, 48, 48, 48, 10, 115, 117, 112, 101, 114, 85, 115, 101, 114, 58, 32, 36, 115, 117, 112, 101, 114, 85, 115, 101, 114, 10, 99, 111, 109, 109, 97, 110, 100, 115, 58, 32, 36, 105, 110, 105, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/req/init.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/app/build/build.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 13, 10, 44, 44, 98, 117, 105, 108, 100, 44, 66, 117, 105, 108, 100, 32, 103, 111, 32, 97, 112, 112, 32, 105, 110, 32, 108, 105, 110, 117, 120, 32, 100, 111, 99, 107, 101, 114, 32, 99, 111, 110, 116, 97, 105, 110, 101, 114, 32, 119, 105, 116, 104, 32, 99, 117, 115, 116, 111, 109, 32, 100, 101, 112, 101, 110, 100, 101, 110, 99, 105, 101, 115, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 115, 116, 97, 114, 116, 32, 83, 83, 72, 68, 32, 100, 111, 99, 107, 101, 114, 44, 82, 117, 110, 32, 97, 110, 32, 100, 111, 99, 107, 101, 114, 44, 37, 73, 110, 105, 116, 44, 13, 10, 91, 93, 73, 110, 105, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 13, 10, 44, 101, 120, 101, 99, 44, 114, 117, 110, 44, 99, 114, 101, 97, 116, 101, 32, 98, 97, 115, 101, 32, 97, 112, 112, 32, 100, 105, 114, 44, 64, 114, 101, 113, 47, 105, 110, 105, 116, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 98, 117, 105, 108, 100, 44, 82, 117, 110, 32, 97, 110, 32, 97, 99, 116, 105, 111, 110, 44, 37, 66, 117, 105, 108, 100, 44, 13, 10, 91, 93, 66, 117, 105, 108, 100, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 13, 10, 44, 115, 100, 107, 44, 115, 101, 116, 44, 115, 101, 116, 32, 115, 100, 107, 44, 64, 114, 101, 113, 47, 115, 100, 107, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 105, 110, 105, 116, 41, 32, 62, 32, 48, 13, 10, 44, 118, 101, 114, 115, 105, 111, 110, 47, 99, 111, 110, 116, 114, 111, 108, 44, 99, 104, 101, 99, 107, 111, 117, 116, 44, 99, 104, 101, 99, 107, 111, 117, 116, 32, 99, 111, 100, 101, 44, 64, 114, 101, 113, 47, 99, 104, 101, 99, 107, 111, 117, 116, 44, 36, 111, 114, 105, 103, 105, 110, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 117, 112, 108, 111, 97, 100, 32, 99, 117, 115, 116, 111, 109, 32, 97, 115, 115, 101, 116, 115, 44, 64, 114, 101, 113, 47, 117, 112, 108, 111, 97, 100, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 117, 112, 108, 111, 97, 100, 41, 32, 62, 32, 48, 13, 10, 44, 101, 120, 101, 99, 44, 114, 117, 110, 44, 114, 117, 110, 32, 99, 111, 109, 109, 97, 110, 100, 115, 44, 64, 114, 101, 113, 47, 99, 109, 100, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 100, 111, 119, 110, 108, 111, 97, 100, 32, 99, 117, 115, 116, 111, 109, 32, 97, 115, 115, 101, 116, 115, 44, 64, 114, 101, 113, 47, 100, 111, 119, 110, 108, 111, 97, 100, 44, 36, 76, 101, 110, 103, 116, 104, 40, 36, 100, 111, 119, 110, 108, 111, 97, 100, 41, 32, 62, 32, 48}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/app/build/build.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/tomcat.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 44, 73, 110, 105, 116, 44, 44, 13, 10, 44, 44, 116, 111, 109, 99, 97, 116, 44, 84, 111, 109, 99, 97, 116, 32, 115, 101, 114, 118, 101, 114, 32, 97, 99, 116, 105, 111, 110, 32, 109, 97, 110, 97, 103, 101, 114, 44, 37, 84, 97, 115, 107, 115, 44, 44, 64, 118, 97, 114, 47, 116, 111, 109, 99, 97, 116, 95, 105, 110, 105, 116, 46, 106, 115, 111, 110, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 105, 110, 115, 116, 97, 108, 108, 44, 84, 104, 105, 115, 32, 116, 97, 115, 107, 32, 119, 105, 108, 108, 32, 105, 110, 115, 116, 97, 108, 108, 32, 116, 111, 109, 99, 97, 116, 44, 37, 73, 110, 115, 116, 97, 108, 108, 44, 44, 44, 44, 13, 10, 91, 93, 73, 110, 115, 116, 97, 108, 108, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10, 44, 100, 101, 112, 108, 111, 121, 109, 101, 110, 116, 44, 100, 101, 112, 108, 111, 121, 44, 68, 101, 112, 108, 111, 121, 32, 116, 111, 109, 99, 97, 116, 32, 115, 101, 114, 118, 101, 114, 32, 105, 110, 116, 111, 32, 116, 97, 114, 103, 101, 116, 32, 104, 111, 115, 116, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 100, 101, 112, 108, 111, 121, 44, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 115, 116, 97, 114, 116, 44, 84, 104, 105, 115, 32, 116, 97, 115, 107, 32, 119, 105, 108, 108, 32, 115, 116, 97, 114, 116, 32, 116, 111, 109, 99, 97, 116, 44, 37, 83, 116, 97, 114, 116, 44, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 86, 97, 114, 105, 97, 98, 108, 101, 115, 44, 80, 111, 115, 116, 44, 13, 10, 44, 115, 100, 107, 44, 115, 101, 116, 44, 83, 101, 116, 32, 106, 100, 107, 44, 64, 114, 101, 113, 47, 115, 101, 116, 95, 106, 100, 107, 44, 44, 44, 44, 13, 10, 44, 112, 114, 111, 99, 101, 115, 115, 44, 115, 116, 97, 116, 117, 115, 44, 67, 104, 101, 99, 107, 32, 116, 111, 109, 99, 97, 116, 32, 112, 114, 111, 99, 101, 115, 115, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 99, 104, 101, 99, 107, 44, 44, 44, 34, 91, 123, 34, 34, 110, 97, 109, 101, 34, 34, 58, 34, 34, 116, 111, 109, 99, 97, 116, 80, 105, 100, 34, 34, 44, 32, 34, 34, 102, 114, 111, 109, 34, 34, 58, 34, 34, 80, 105, 100, 34, 34, 44, 32, 34, 34, 118, 97, 108, 117, 101, 34, 34, 58, 34, 34, 48, 34, 34, 125, 93, 34, 44, 13, 10, 44, 101, 120, 101, 99, 44, 101, 120, 116, 114, 97, 99, 116, 44, 115, 116, 111, 112, 32, 116, 111, 109, 99, 97, 116, 32, 115, 101, 114, 118, 101, 114, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 115, 116, 111, 112, 44, 36, 116, 111, 109, 99, 97, 116, 80, 105, 100, 58, 33, 48, 44, 44, 44, 13, 10, 44, 101, 120, 101, 99, 44, 101, 120, 116, 114, 97, 99, 116, 44, 115, 116, 97, 114, 116, 32, 116, 111, 109, 99, 97, 116, 32, 115, 101, 114, 118, 101, 114, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 115, 116, 97, 114, 116, 44, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 115, 116, 111, 112, 44, 84, 104, 105, 115, 32, 116, 97, 115, 107, 32, 119, 105, 108, 108, 32, 115, 116, 111, 112, 32, 116, 111, 109, 99, 97, 116, 44, 37, 83, 116, 111, 112, 44, 44, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 44, 80, 111, 115, 116, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 13, 10, 44, 115, 100, 107, 44, 115, 101, 116, 44, 83, 101, 116, 32, 106, 100, 107, 44, 64, 114, 101, 113, 47, 115, 101, 116, 95, 106, 100, 107, 44, 44, 44, 44, 13, 10, 44, 112, 114, 111, 99, 101, 115, 115, 44, 115, 116, 97, 116, 117, 115, 44, 67, 104, 101, 99, 107, 32, 116, 111, 109, 99, 97, 116, 32, 112, 114, 111, 99, 101, 115, 115, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 99, 104, 101, 99, 107, 44, 44, 44, 34, 91, 123, 34, 34, 110, 97, 109, 101, 34, 34, 58, 34, 34, 116, 111, 109, 99, 97, 116, 80, 105, 100, 34, 34, 44, 32, 34, 34, 102, 114, 111, 109, 34, 34, 58, 34, 34, 80, 105, 100, 34, 34, 44, 32, 34, 34, 118, 97, 108, 117, 101, 34, 34, 58, 34, 34, 48, 34, 34, 125, 93, 34, 44, 13, 10, 44, 101, 120, 101, 99, 44, 101, 120, 116, 114, 97, 99, 116, 44, 115, 116, 111, 112, 32, 116, 111, 109, 99, 97, 116, 32, 115, 101, 114, 118, 101, 114, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 115, 116, 111, 112, 44, 36, 116, 111, 109, 99, 97, 116, 80, 105, 100, 58, 33, 48, 44, 44, 44, 53, 48, 48, 13, 10, 44, 112, 114, 111, 99, 101, 115, 115, 44, 115, 116, 97, 116, 117, 115, 44, 67, 104, 101, 99, 107, 32, 116, 111, 109, 99, 97, 116, 32, 112, 114, 111, 99, 101, 115, 115, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 99, 104, 101, 99, 107, 44, 44, 44, 34, 91, 123, 34, 34, 110, 97, 109, 101, 34, 34, 58, 34, 34, 116, 111, 109, 99, 97, 116, 80, 105, 100, 34, 34, 44, 32, 34, 34, 102, 114, 111, 109, 34, 34, 58, 34, 34, 80, 105, 100, 34, 34, 44, 32, 34, 34, 118, 97, 108, 117, 101, 34, 34, 58, 34, 34, 48, 34, 34, 125, 93, 34, 44, 13, 10, 44, 112, 114, 111, 99, 101, 115, 115, 44, 115, 116, 111, 112, 44, 75, 105, 108, 108, 32, 116, 111, 109, 99, 97, 116, 32, 112, 114, 111, 99, 101, 115, 115, 44, 64, 114, 101, 113, 47, 116, 111, 109, 99, 97, 116, 95, 107, 105, 108, 108, 44, 36, 116, 111, 109, 99, 97, 116, 80, 105, 100, 58, 33, 48, 44, 44, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/tomcat.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/var/tomcat_init.json", bytes.NewReader([]byte{91, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 86, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 111, 109, 99, 97, 116, 86, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 97, 116, 97, 108, 105, 110, 97, 79, 112, 116, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 97, 116, 97, 108, 105, 110, 97, 79, 112, 116, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 45, 88, 109, 115, 53, 49, 50, 109, 32, 45, 88, 109, 120, 49, 103, 32, 45, 88, 88, 58, 77, 97, 120, 80, 101, 114, 109, 83, 105, 122, 101, 61, 50, 53, 54, 109, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 111, 109, 99, 97, 116, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 56, 48, 56, 48, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 106, 112, 100, 97, 65, 100, 100, 114, 101, 115, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 106, 112, 100, 97, 65, 100, 100, 114, 101, 115, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 53, 48, 48, 48, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 83, 104, 117, 116, 100, 111, 119, 110, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 111, 109, 99, 97, 116, 83, 104, 117, 116, 100, 111, 119, 110, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 56, 48, 48, 53, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 65, 74, 80, 67, 111, 110, 110, 101, 99, 116, 111, 114, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 111, 109, 99, 97, 116, 65, 74, 80, 67, 111, 110, 110, 101, 99, 116, 111, 114, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 56, 48, 48, 57, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 82, 101, 100, 105, 114, 101, 99, 116, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 111, 109, 99, 97, 116, 82, 101, 100, 105, 114, 101, 99, 116, 80, 111, 114, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 56, 52, 52, 51, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 49, 46, 55, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 36, 112, 97, 114, 97, 109, 115, 46, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 102, 111, 114, 99, 101, 68, 101, 112, 108, 111, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 102, 111, 114, 99, 101, 68, 101, 112, 108, 111, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 102, 97, 108, 115, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 110, 102, 105, 103, 85, 114, 108, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 110, 102, 105, 103, 85, 114, 108, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 110, 102, 105, 103, 85, 82, 76, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 110, 102, 105, 103, 85, 82, 76, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 97, 112, 97, 99, 104, 101, 45, 116, 111, 109, 99, 97, 116, 45, 36, 123, 116, 111, 109, 99, 97, 116, 86, 101, 114, 115, 105, 111, 110, 125, 34, 13, 10, 32, 32, 125, 13, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/var/tomcat_init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/var/vc_maven_build_init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 36, 112, 97, 114, 97, 109, 115, 46, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 109, 97, 118, 101, 110, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 112, 97, 114, 97, 109, 115, 46, 109, 97, 118, 101, 110, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 71, 111, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 98, 117, 105, 108, 100, 71, 111, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 105, 110, 115, 116, 97, 108, 108, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 65, 114, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 98, 117, 105, 108, 100, 65, 114, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 84, 121, 112, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 111, 114, 105, 103, 105, 110, 84, 121, 112, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 111, 114, 105, 103, 105, 110, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 111, 114, 105, 103, 105, 110, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 84, 121, 112, 101, 34, 58, 32, 34, 36, 111, 114, 105, 103, 105, 110, 84, 121, 112, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 111, 114, 105, 103, 105, 110, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 111, 114, 105, 103, 105, 110, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 104, 101, 99, 107, 111, 117, 116, 82, 101, 113, 117, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 79, 114, 105, 103, 105, 110, 34, 58, 32, 34, 36, 111, 114, 105, 103, 105, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 68, 101, 115, 116, 34, 58, 32, 34, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 82, 101, 113, 117, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 66, 117, 105, 108, 100, 83, 112, 101, 99, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 109, 97, 118, 101, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 86, 101, 114, 115, 105, 111, 110, 34, 58, 34, 36, 109, 97, 118, 101, 110, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 71, 111, 97, 108, 34, 58, 32, 34, 98, 117, 105, 108, 100, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 66, 117, 105, 108, 100, 71, 111, 97, 108, 34, 58, 32, 34, 36, 98, 117, 105, 108, 100, 71, 111, 97, 108, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 65, 114, 103, 115, 34, 58, 32, 34, 36, 98, 117, 105, 108, 100, 65, 114, 103, 115, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 83, 100, 107, 34, 58, 32, 34, 106, 100, 107, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 83, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 10, 32, 32, 32, 32, 32, 32, 125, 44, 10, 32, 32, 32, 32, 32, 32, 34, 84, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/var/vc_maven_build_init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/assert/assert.csv", bytes.NewReader([]byte{86, 97, 108, 105, 100, 97, 116, 105, 111, 110, 44, 78, 97, 109, 101, 44, 84, 97, 115, 107, 115, 44, 91, 93, 73, 110, 105, 116, 46, 78, 97, 109, 101, 44, 91, 93, 73, 110, 105, 116, 46, 70, 114, 111, 109, 44, 91, 93, 73, 110, 105, 116, 46, 82, 101, 113, 117, 105, 114, 101, 100, 13, 10, 44, 97, 115, 115, 101, 114, 116, 44, 37, 84, 97, 115, 107, 115, 44, 97, 99, 116, 117, 97, 108, 44, 112, 97, 114, 97, 109, 115, 46, 97, 99, 116, 117, 97, 108, 44, 84, 82, 85, 69, 13, 10, 44, 44, 44, 101, 120, 112, 101, 99, 116, 101, 100, 44, 112, 97, 114, 97, 109, 115, 46, 101, 120, 112, 101, 99, 116, 101, 100, 44, 84, 82, 85, 69, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 78, 97, 109, 101, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 97, 115, 115, 101, 114, 116, 44, 37, 65, 115, 115, 101, 114, 116, 44, 44, 44, 13, 10, 91, 93, 65, 115, 115, 101, 114, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 65, 99, 116, 117, 97, 108, 44, 82, 101, 113, 117, 101, 115, 116, 46, 69, 120, 112, 101, 99, 116, 101, 100, 44, 13, 10, 44, 118, 97, 108, 105, 100, 97, 116, 111, 114, 44, 97, 115, 115, 101, 114, 116, 44, 36, 97, 99, 116, 117, 97, 108, 44, 36, 101, 120, 112, 101, 99, 116, 101, 100, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/assert/assert.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/assert/README.md", bytes.NewReader([]byte{35, 35, 35, 32, 65, 115, 115, 101, 114, 116, 10, 10, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 114, 117, 110, 95, 10, 96, 96, 96, 98, 97, 115, 104, 10, 35, 32, 99, 97, 108, 108, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 116, 97, 115, 107, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 97, 115, 115, 101, 114, 116, 32, 97, 99, 116, 117, 97, 108, 61, 97, 32, 101, 120, 112, 101, 99, 116, 101, 100, 61, 98, 10, 10, 35, 111, 114, 32, 116, 111, 32, 116, 101, 115, 116, 32, 99, 111, 110, 116, 101, 110, 116, 32, 111, 102, 32, 102, 105, 108, 101, 115, 32, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 97, 115, 115, 101, 114, 116, 32, 97, 99, 116, 117, 97, 108, 32, 39, 64, 97, 99, 116, 117, 97, 108, 46, 106, 115, 111, 110, 39, 32, 101, 120, 112, 101, 99, 116, 101, 100, 32, 39, 64, 101, 120, 112, 101, 99, 116, 101, 100, 46, 106, 115, 111, 110, 39, 10, 96, 96, 96, 10, 10, 35, 35, 35, 35, 32, 95, 80, 105, 112, 101, 108, 105, 110, 101, 32, 114, 117, 110, 95, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 114, 61, 114, 117, 110, 10, 96, 96, 96, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 10, 96, 96, 96, 121, 97, 109, 108, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 112, 114, 105, 110, 116, 10, 32, 32, 32, 32, 109, 101, 115, 115, 97, 103, 101, 58, 32, 98, 117, 105, 108, 100, 105, 110, 103, 32, 97, 112, 112, 32, 46, 46, 46, 10, 32, 32, 116, 101, 115, 116, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 97, 115, 115, 101, 114, 116, 10, 32, 32, 32, 32, 97, 99, 116, 117, 97, 108, 58, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 49, 58, 32, 118, 97, 108, 117, 101, 49, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 50, 58, 32, 118, 97, 108, 117, 101, 50, 48, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 51, 58, 32, 118, 97, 108, 117, 101, 51, 48, 10, 32, 32, 32, 32, 101, 120, 112, 101, 99, 116, 101, 100, 58, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 49, 58, 32, 118, 97, 108, 117, 101, 49, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 50, 58, 32, 118, 97, 108, 117, 101, 50, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 51, 58, 32, 118, 97, 108, 117, 101, 51, 10, 32, 32, 32, 32, 32, 32, 107, 101, 121, 52, 58, 32, 118, 97, 108, 117, 101, 52, 32, 32, 32, 32, 32, 10, 96, 96, 96, 10, 10, 10, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/assert/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/tomcat_stop.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 84, 97, 114, 103, 101, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 125, 36, 123, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 125, 47, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 125, 44, 10, 32, 32, 34, 68, 105, 114, 101, 99, 116, 111, 114, 121, 34, 58, 32, 34, 36, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 34, 44, 10, 32, 32, 34, 67, 111, 109, 109, 97, 110, 100, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 67, 111, 109, 109, 97, 110, 100, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 47, 98, 105, 110, 47, 115, 104, 117, 116, 100, 111, 119, 110, 46, 115, 104, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 93, 10, 125, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/tomcat_stop.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/maven_get_active_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 10, 32, 32, 125, 44, 10, 32, 32, 34, 68, 101, 115, 116, 75, 101, 121, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/maven_get_active_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/maven_remove_backup_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 82, 101, 115, 111, 117, 114, 99, 101, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 46, 98, 97, 99, 107, 117, 112, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 93, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/maven_remove_backup_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/tomcat_deploy.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 70, 111, 114, 99, 101, 34, 58, 32, 34, 36, 102, 111, 114, 99, 101, 68, 101, 112, 108, 111, 121, 34, 44, 10, 32, 32, 34, 83, 100, 107, 34, 58, 32, 34, 106, 100, 107, 34, 44, 10, 32, 32, 34, 83, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 34, 65, 112, 112, 78, 97, 109, 101, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 34, 44, 10, 32, 32, 34, 86, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 116, 111, 109, 99, 97, 116, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 34, 84, 97, 114, 103, 101, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 99, 112, 58, 47, 47, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 125, 47, 36, 123, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 125, 47, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 125, 10, 125, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/tomcat_deploy.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/maven_restore_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 75, 101, 121, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 10, 32, 32, 125, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/maven_restore_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/maven_get_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 34, 58, 32, 34, 36, 109, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 75, 101, 121, 34, 58, 32, 34, 119, 111, 114, 107, 102, 108, 111, 119, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/maven_get_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/tomcat_kill.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 84, 97, 114, 103, 101, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 125, 36, 123, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 125, 47, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 125, 44, 10, 32, 32, 34, 80, 105, 100, 34, 58, 32, 34, 36, 116, 111, 109, 99, 97, 116, 80, 105, 100, 34, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/tomcat_kill.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/maven_backup_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 75, 101, 121, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 46, 98, 97, 99, 107, 117, 112, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 44, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 97, 99, 107, 117, 112, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 10, 32, 32, 125, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/maven_backup_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/maven_set_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 75, 101, 121, 34, 58, 32, 34, 119, 111, 114, 107, 102, 108, 111, 119, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 10, 32, 32, 125, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/maven_set_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/tomcat_check.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 84, 97, 114, 103, 101, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 125, 36, 123, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 125, 47, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 125, 44, 10, 32, 32, 34, 67, 111, 109, 109, 97, 110, 100, 34, 58, 32, 34, 99, 97, 116, 97, 108, 105, 110, 97, 32, 124, 32, 103, 114, 101, 112, 32, 36, 123, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 125, 47, 116, 111, 109, 99, 97, 116, 34, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/tomcat_check.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/req/tomcat_start.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 84, 97, 114, 103, 101, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 125, 36, 123, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 125, 47, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 125, 44, 10, 32, 32, 34, 69, 110, 118, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 67, 65, 84, 65, 76, 73, 78, 65, 95, 79, 80, 84, 83, 34, 58, 32, 34, 36, 99, 97, 116, 97, 108, 105, 110, 97, 79, 112, 116, 115, 34, 44, 10, 32, 32, 32, 32, 34, 74, 80, 68, 65, 95, 65, 68, 68, 82, 69, 83, 83, 34, 58, 32, 34, 36, 106, 112, 100, 97, 65, 100, 100, 114, 101, 115, 115, 34, 10, 32, 32, 125, 44, 10, 32, 32, 34, 68, 105, 114, 101, 99, 116, 111, 114, 121, 34, 58, 32, 34, 36, 97, 112, 112, 68, 105, 114, 101, 99, 116, 111, 114, 121, 34, 44, 10, 32, 32, 34, 67, 111, 109, 109, 97, 110, 100, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 67, 111, 109, 109, 97, 110, 100, 34, 58, 32, 34, 116, 111, 109, 99, 97, 116, 47, 98, 105, 110, 47, 99, 97, 116, 97, 108, 105, 110, 97, 46, 115, 104, 32, 106, 112, 100, 97, 32, 115, 116, 97, 114, 116, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 83, 117, 99, 99, 101, 115, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 34, 84, 111, 109, 99, 97, 116, 32, 115, 116, 97, 114, 116, 101, 100, 46, 34, 10, 32, 32, 32, 32, 32, 32, 93, 44, 10, 32, 32, 32, 32, 32, 32, 34, 69, 120, 116, 114, 97, 99, 116, 105, 111, 110, 34, 58, 32, 91, 10, 32, 32, 32, 32, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 75, 101, 121, 34, 58, 32, 34, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 82, 101, 103, 69, 120, 112, 114, 34, 58, 32, 34, 83, 101, 114, 118, 101, 114, 32, 110, 117, 109, 98, 101, 114, 58, 32, 40, 92, 92, 100, 43, 92, 92, 46, 92, 92, 100, 43, 92, 92, 46, 92, 92, 100, 43, 41, 34, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 32, 32, 93, 10, 32, 32, 32, 32, 125, 10, 32, 32, 93, 10, 125, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/req/tomcat_start.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/action/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 97, 99, 116, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 97, 99, 116, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 114, 101, 113, 117, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 114, 101, 113, 117, 101, 115, 116, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/action/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/action/action.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 44, 44, 44, 13, 10, 44, 44, 97, 99, 116, 105, 111, 110, 44, 82, 117, 110, 32, 112, 114, 111, 118, 105, 100, 101, 100, 32, 115, 101, 114, 118, 105, 99, 101, 32, 97, 99, 116, 105, 111, 110, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 114, 117, 110, 44, 82, 117, 110, 32, 97, 110, 32, 97, 99, 116, 105, 111, 110, 44, 37, 82, 117, 110, 44, 44, 44, 44, 13, 10, 91, 93, 82, 117, 110, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10, 44, 36, 115, 101, 114, 118, 105, 99, 101, 44, 36, 97, 99, 116, 105, 111, 110, 44, 82, 117, 110, 32, 36, 97, 99, 116, 105, 111, 110, 44, 36, 114, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/action/action.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/gce/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 103, 99, 101, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 112, 97, 114, 97, 109, 115, 46, 103, 99, 101, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 103, 99, 101, 80, 114, 111, 106, 101, 99, 116, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 112, 97, 114, 97, 109, 115, 46, 103, 99, 101, 80, 114, 111, 106, 101, 99, 116, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 103, 99, 101, 90, 111, 110, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 112, 97, 114, 97, 109, 115, 46, 103, 99, 101, 90, 111, 110, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 103, 99, 101, 73, 110, 115, 116, 97, 110, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 112, 97, 114, 97, 109, 115, 46, 103, 99, 101, 73, 110, 115, 116, 97, 110, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/gce/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/gce/var/status.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 105, 110, 115, 116, 97, 110, 99, 101, 83, 116, 97, 116, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 83, 116, 97, 116, 117, 115, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 80, 114, 105, 118, 97, 116, 101, 73, 80, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 78, 101, 116, 119, 111, 114, 107, 73, 110, 116, 101, 114, 102, 97, 99, 101, 115, 91, 48, 93, 46, 78, 101, 116, 119, 111, 114, 107, 73, 80, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 80, 117, 98, 108, 105, 99, 73, 80, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 78, 101, 116, 119, 111, 114, 107, 73, 110, 116, 101, 114, 102, 97, 99, 101, 115, 91, 48, 93, 46, 65, 99, 99, 101, 115, 115, 67, 111, 110, 102, 105, 103, 115, 91, 48, 93, 46, 78, 97, 116, 73, 80, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/gce/var/status.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/gce/var/post.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 80, 114, 105, 118, 97, 116, 101, 73, 80, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 80, 114, 105, 118, 97, 116, 101, 73, 80, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 80, 117, 98, 108, 105, 99, 73, 80, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 80, 117, 98, 108, 105, 99, 73, 80, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/gce/var/post.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/gce/req/call.yaml", bytes.NewReader([]byte{99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 103, 99, 101, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 10, 115, 101, 114, 118, 105, 99, 101, 58, 32, 73, 110, 115, 116, 97, 110, 99, 101, 115, 10, 109, 101, 116, 104, 111, 100, 58, 32, 36, 109, 101, 116, 104, 111, 100, 10, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 58, 10, 32, 32, 45, 32, 36, 103, 99, 101, 80, 114, 111, 106, 101, 99, 116, 10, 32, 32, 45, 32, 36, 103, 99, 101, 90, 111, 110, 101, 10, 32, 32, 45, 32, 36, 103, 99, 101, 73, 110, 115, 116, 97, 110, 99, 101}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/gce/req/call.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/gce/gce.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 44, 80, 111, 115, 116, 13, 10, 44, 44, 44, 103, 99, 101, 44, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 71, 67, 69, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 32, 64, 118, 97, 114, 47, 112, 111, 115, 116, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 13, 10, 44, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 71, 67, 69, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 37, 83, 116, 97, 114, 116, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 44, 103, 99, 101, 44, 99, 97, 108, 108, 44, 67, 104, 101, 99, 107, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 32, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 71, 101, 116, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 83, 111, 117, 114, 99, 101, 75, 101, 121, 44, 82, 101, 113, 117, 101, 115, 116, 46, 67, 97, 115, 101, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 115, 119, 105, 116, 99, 104, 44, 115, 119, 105, 116, 99, 104, 47, 99, 97, 115, 101, 32, 102, 111, 114, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 105, 110, 115, 116, 97, 110, 99, 101, 83, 116, 97, 116, 101, 44, 37, 83, 116, 97, 114, 116, 67, 97, 115, 101, 115, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 67, 97, 115, 101, 115, 44, 86, 97, 108, 117, 101, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 84, 69, 82, 77, 73, 78, 65, 84, 69, 68, 44, 103, 99, 101, 44, 99, 97, 108, 108, 44, 115, 116, 97, 114, 116, 32, 71, 67, 69, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 44, 83, 116, 97, 114, 116, 13, 10, 44, 82, 85, 78, 78, 73, 78, 71, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 101, 120, 105, 116, 44, 101, 120, 105, 116, 32, 119, 111, 114, 107, 102, 108, 111, 119, 44, 123, 125, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 84, 97, 115, 107, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 103, 111, 116, 111, 32, 115, 116, 97, 114, 116, 32, 116, 97, 115, 107, 44, 115, 116, 97, 114, 116, 44, 53, 48, 48, 48, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 13, 10, 44, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 71, 67, 69, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 37, 83, 116, 111, 112, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 44, 103, 99, 101, 44, 99, 97, 108, 108, 44, 67, 104, 101, 99, 107, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 32, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 71, 101, 116, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 83, 111, 117, 114, 99, 101, 75, 101, 121, 44, 82, 101, 113, 117, 101, 115, 116, 46, 67, 97, 115, 101, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 115, 119, 105, 116, 99, 104, 44, 115, 119, 105, 116, 99, 104, 47, 99, 97, 115, 101, 32, 102, 111, 114, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 105, 110, 115, 116, 97, 110, 99, 101, 83, 116, 97, 116, 101, 44, 37, 83, 116, 111, 112, 67, 97, 115, 101, 115, 44, 13, 10, 91, 93, 83, 116, 111, 112, 67, 97, 115, 101, 115, 44, 86, 97, 108, 117, 101, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 82, 85, 78, 78, 73, 78, 71, 44, 103, 99, 101, 44, 99, 97, 108, 108, 44, 115, 116, 111, 112, 32, 71, 67, 69, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 44, 83, 116, 111, 112, 13, 10, 44, 84, 69, 82, 77, 73, 78, 65, 84, 69, 68, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 101, 120, 105, 116, 44, 101, 120, 105, 116, 32, 119, 111, 114, 107, 102, 108, 111, 119, 44, 123, 125, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 84, 97, 115, 107, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 103, 111, 116, 111, 32, 115, 116, 111, 112, 32, 116, 97, 115, 107, 44, 115, 116, 111, 112, 44, 53, 48, 48, 48, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/gce/gce.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/ec2/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 97, 119, 115, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 112, 97, 114, 97, 109, 115, 46, 97, 119, 115, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 101, 99, 50, 73, 110, 115, 116, 97, 110, 99, 101, 73, 100, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 112, 97, 114, 97, 109, 115, 46, 101, 99, 50, 73, 110, 115, 116, 97, 110, 99, 101, 73, 100, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/ec2/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/ec2/var/status.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 110, 115, 116, 97, 110, 99, 101, 83, 116, 97, 116, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 82, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 115, 91, 48, 93, 46, 73, 110, 115, 116, 97, 110, 99, 101, 115, 91, 48, 93, 46, 83, 116, 97, 116, 101, 46, 78, 97, 109, 101, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 82, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 82, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 115, 34, 10, 32, 32, 125, 10, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/ec2/var/status.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/ec2/var/post.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 82, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 82, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 115, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 80, 114, 105, 118, 97, 116, 101, 73, 80, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 82, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 115, 91, 48, 93, 46, 73, 110, 115, 116, 97, 110, 99, 101, 115, 91, 48, 93, 46, 78, 101, 116, 119, 111, 114, 107, 73, 110, 116, 101, 114, 102, 97, 99, 101, 115, 91, 48, 93, 46, 80, 114, 105, 118, 97, 116, 101, 73, 112, 65, 100, 100, 114, 101, 115, 115, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 34, 80, 117, 98, 108, 105, 99, 73, 80, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 34, 82, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110, 115, 91, 48, 93, 46, 73, 110, 115, 116, 97, 110, 99, 101, 115, 91, 48, 93, 46, 78, 101, 116, 119, 111, 114, 107, 73, 110, 116, 101, 114, 102, 97, 99, 101, 115, 91, 48, 93, 46, 80, 117, 98, 108, 105, 99, 73, 112, 65, 100, 100, 114, 101, 115, 115, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/ec2/var/post.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/ec2/req/call.yaml", bytes.NewReader([]byte{99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 97, 119, 115, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 10, 109, 101, 116, 104, 111, 100, 58, 32, 36, 109, 101, 116, 104, 111, 100, 10, 105, 110, 112, 117, 116, 58, 10, 32, 32, 105, 110, 115, 116, 97, 110, 99, 101, 73, 100, 115, 58, 10, 32, 32, 32, 32, 45, 32, 36, 101, 99, 50, 73, 110, 115, 116, 97, 110, 99, 101, 73, 100, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/ec2/req/call.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/cloud/ec2/ec2.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 44, 80, 111, 115, 116, 13, 10, 44, 44, 44, 101, 99, 50, 44, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 101, 99, 50, 32, 105, 110, 115, 116, 97, 110, 99, 101, 115, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 32, 64, 118, 97, 114, 47, 112, 111, 115, 116, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 13, 10, 44, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 101, 99, 50, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 37, 83, 116, 97, 114, 116, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 44, 97, 119, 115, 47, 101, 99, 50, 44, 99, 97, 108, 108, 44, 99, 104, 101, 99, 107, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 32, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 68, 101, 115, 99, 114, 105, 98, 101, 73, 110, 115, 116, 97, 110, 99, 101, 115, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 83, 111, 117, 114, 99, 101, 75, 101, 121, 44, 82, 101, 113, 117, 101, 115, 116, 46, 67, 97, 115, 101, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 115, 119, 105, 116, 99, 104, 44, 115, 119, 105, 116, 99, 104, 47, 99, 97, 115, 101, 32, 102, 111, 114, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 105, 110, 115, 116, 97, 110, 99, 101, 83, 116, 97, 116, 101, 44, 37, 83, 116, 97, 114, 116, 67, 97, 115, 101, 115, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 67, 97, 115, 101, 115, 44, 86, 97, 108, 117, 101, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 115, 116, 111, 112, 112, 101, 100, 44, 97, 119, 115, 47, 101, 99, 50, 44, 99, 97, 108, 108, 44, 115, 116, 97, 114, 116, 32, 69, 99, 50, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 44, 83, 116, 97, 114, 116, 73, 110, 115, 116, 97, 110, 99, 101, 115, 13, 10, 44, 114, 117, 110, 110, 105, 110, 103, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 101, 120, 105, 116, 44, 101, 120, 105, 116, 32, 119, 111, 114, 107, 102, 108, 111, 119, 44, 123, 125, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 84, 97, 115, 107, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 103, 111, 116, 111, 32, 115, 116, 97, 114, 116, 32, 116, 97, 115, 107, 44, 115, 116, 97, 114, 116, 44, 53, 48, 48, 48, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 13, 10, 44, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 101, 99, 50, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 37, 83, 116, 111, 112, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 44, 97, 119, 115, 47, 101, 99, 50, 44, 99, 97, 108, 108, 44, 99, 104, 101, 99, 107, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 32, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 68, 101, 115, 99, 114, 105, 98, 101, 73, 110, 115, 116, 97, 110, 99, 101, 115, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 83, 111, 117, 114, 99, 101, 75, 101, 121, 44, 82, 101, 113, 117, 101, 115, 116, 46, 67, 97, 115, 101, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 115, 119, 105, 116, 99, 104, 44, 115, 119, 105, 116, 99, 104, 47, 99, 97, 115, 101, 32, 102, 111, 114, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 115, 116, 97, 116, 117, 115, 44, 105, 110, 115, 116, 97, 110, 99, 101, 83, 116, 97, 116, 101, 44, 37, 83, 116, 111, 112, 67, 97, 115, 101, 115, 44, 13, 10, 91, 93, 83, 116, 111, 112, 67, 97, 115, 101, 115, 44, 86, 97, 108, 117, 101, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 109, 101, 116, 104, 111, 100, 13, 10, 44, 114, 117, 110, 110, 105, 110, 103, 44, 97, 119, 115, 47, 101, 99, 50, 44, 99, 97, 108, 108, 44, 115, 116, 111, 112, 32, 69, 99, 50, 32, 105, 110, 115, 116, 97, 110, 99, 101, 44, 64, 114, 101, 113, 47, 99, 97, 108, 108, 44, 44, 83, 116, 111, 112, 73, 110, 115, 116, 97, 110, 99, 101, 115, 13, 10, 44, 115, 116, 111, 112, 112, 101, 100, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 101, 120, 105, 116, 44, 101, 120, 105, 116, 32, 119, 111, 114, 107, 102, 108, 111, 119, 44, 123, 125, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 84, 97, 115, 107, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 103, 111, 116, 111, 32, 115, 116, 111, 112, 32, 116, 97, 115, 107, 44, 115, 116, 111, 112, 44, 53, 48, 48, 48, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/cloud/ec2/ec2.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/var/init.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 109, 97, 118, 101, 110, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 109, 97, 118, 101, 110, 86, 101, 114, 115, 105, 111, 110, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 109, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 109, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 102, 97, 108, 115, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 71, 111, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 98, 117, 105, 108, 100, 71, 111, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 105, 110, 115, 116, 97, 108, 108, 34, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 65, 114, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 98, 117, 105, 108, 100, 65, 114, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 84, 121, 112, 101, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 111, 114, 105, 103, 105, 110, 84, 121, 112, 101, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 111, 114, 105, 103, 105, 110, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 111, 114, 105, 103, 105, 110, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 109, 111, 100, 117, 108, 101, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 109, 111, 100, 117, 108, 101, 115, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 112, 97, 114, 101, 110, 116, 80, 111, 109, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 112, 97, 114, 101, 110, 116, 80, 111, 109, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 84, 121, 112, 101, 34, 58, 32, 34, 36, 111, 114, 105, 103, 105, 110, 84, 121, 112, 101, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 111, 114, 105, 103, 105, 110, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 111, 114, 105, 103, 105, 110, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 85, 114, 108, 34, 44, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 125, 44, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/vc_maven_module_build.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 44, 68, 101, 102, 101, 114, 84, 97, 115, 107, 44, 44, 13, 10, 44, 44, 118, 99, 95, 109, 97, 118, 101, 110, 95, 109, 111, 100, 117, 108, 101, 95, 98, 117, 105, 108, 100, 44, 87, 111, 114, 107, 102, 108, 111, 119, 32, 99, 104, 101, 99, 107, 32, 111, 117, 116, 115, 47, 112, 117, 108, 108, 115, 32, 108, 97, 116, 101, 115, 116, 32, 99, 104, 97, 110, 103, 101, 32, 102, 114, 111, 109, 32, 118, 99, 32, 116, 111, 32, 109, 97, 118, 101, 110, 32, 98, 117, 105, 108, 100, 32, 105, 116, 44, 37, 84, 97, 115, 107, 115, 44, 32, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 99, 108, 101, 97, 110, 117, 112, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 83, 116, 101, 112, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 49, 44, 99, 104, 101, 99, 107, 111, 117, 116, 44, 84, 104, 105, 115, 32, 116, 97, 115, 107, 32, 119, 105, 108, 32, 103, 101, 116, 32, 116, 104, 101, 32, 108, 97, 116, 101, 115, 116, 32, 99, 111, 100, 101, 32, 97, 110, 100, 32, 98, 117, 105, 108, 100, 32, 105, 116, 44, 37, 67, 104, 101, 99, 107, 111, 117, 116, 44, 44, 44, 44, 13, 10, 91, 93, 67, 104, 101, 99, 107, 111, 117, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10, 44, 118, 101, 114, 115, 105, 111, 110, 47, 99, 111, 110, 116, 114, 111, 108, 44, 99, 104, 101, 99, 107, 111, 117, 116, 44, 67, 104, 101, 99, 107, 32, 111, 117, 116, 32, 116, 104, 101, 32, 108, 97, 116, 101, 115, 116, 32, 99, 111, 100, 101, 44, 64, 114, 101, 113, 47, 99, 104, 101, 99, 107, 111, 117, 116, 44, 44, 44, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 67, 111, 112, 121, 32, 109, 111, 100, 117, 108, 101, 32, 112, 111, 109, 32, 102, 105, 108, 101, 44, 32, 64, 114, 101, 113, 47, 99, 111, 112, 121, 80, 111, 109, 44, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 83, 116, 101, 112, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 49, 44, 98, 117, 105, 108, 100, 44, 84, 104, 105, 115, 32, 116, 97, 115, 107, 32, 119, 105, 108, 32, 98, 117, 105, 108, 100, 32, 116, 104, 101, 32, 99, 104, 101, 99, 107, 101, 100, 32, 111, 117, 116, 32, 99, 111, 100, 101, 44, 37, 66, 117, 105, 108, 100, 44, 44, 44, 44, 13, 10, 91, 93, 66, 117, 105, 108, 100, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 71, 114, 111, 117, 112, 44, 83, 107, 105, 112, 44, 73, 110, 105, 116, 44, 87, 104, 101, 110, 13, 10, 44, 110, 111, 112, 44, 110, 111, 112, 44, 44, 123, 125, 44, 109, 118, 110, 95, 115, 101, 116, 116, 105, 110, 103, 44, 33, 36, 109, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 44, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 100, 111, 119, 110, 108, 111, 97, 100, 44, 84, 97, 107, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 109, 97, 118, 101, 110, 32, 115, 101, 116, 116, 105, 110, 103, 115, 44, 64, 114, 101, 113, 47, 109, 97, 118, 101, 110, 95, 103, 101, 116, 95, 97, 99, 116, 105, 118, 101, 95, 115, 101, 116, 116, 105, 110, 103, 115, 44, 109, 118, 110, 95, 115, 101, 116, 116, 105, 110, 103, 44, 44, 44, 36, 72, 97, 115, 82, 101, 115, 111, 117, 114, 99, 101, 40, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 41, 58, 116, 114, 117, 101, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 117, 112, 108, 111, 97, 100, 44, 66, 97, 99, 107, 117, 112, 32, 99, 117, 114, 114, 101, 110, 116, 32, 109, 97, 118, 101, 110, 32, 115, 101, 116, 116, 105, 110, 103, 115, 44, 64, 114, 101, 113, 47, 109, 97, 118, 101, 110, 95, 98, 97, 99, 107, 117, 112, 95, 115, 101, 116, 116, 105, 110, 103, 115, 44, 109, 118, 110, 95, 115, 101, 116, 116, 105, 110, 103, 44, 44, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 100, 111, 119, 110, 108, 111, 97, 100, 44, 84, 97, 107, 101, 32, 109, 97, 118, 101, 110, 32, 115, 117, 112, 112, 108, 105, 101, 100, 32, 115, 101, 116, 116, 105, 110, 103, 115, 44, 64, 114, 101, 113, 47, 109, 97, 118, 101, 110, 95, 103, 101, 116, 95, 115, 101, 116, 116, 105, 110, 103, 115, 44, 109, 118, 110, 95, 115, 101, 116, 116, 105, 110, 103, 44, 44, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 117, 112, 108, 111, 97, 100, 44, 65, 112, 112, 108, 121, 32, 115, 117, 112, 112, 112, 108, 105, 101, 100, 32, 109, 97, 118, 101, 110, 32, 115, 101, 116, 116, 105, 110, 103, 115, 44, 64, 114, 101, 113, 47, 109, 97, 118, 101, 110, 95, 115, 101, 116, 95, 115, 101, 116, 116, 105, 110, 103, 115, 44, 109, 118, 110, 95, 115, 101, 116, 116, 105, 110, 103, 44, 44, 44, 13, 10, 44, 98, 117, 105, 108, 100, 44, 98, 117, 105, 108, 100, 44, 66, 117, 105, 108, 100, 32, 109, 97, 118, 101, 110, 32, 97, 114, 116, 105, 102, 97, 99, 116, 44, 64, 114, 101, 113, 47, 98, 117, 105, 108, 100, 44, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 83, 116, 101, 112, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 49, 44, 99, 108, 101, 97, 110, 117, 112, 44, 114, 101, 115, 116, 111, 114, 101, 115, 32, 112, 114, 101, 118, 105, 111, 117, 115, 32, 109, 97, 118, 101, 110, 32, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 32, 102, 105, 108, 101, 44, 37, 67, 108, 101, 97, 110, 117, 112, 44, 44, 44, 44, 13, 10, 91, 93, 67, 108, 101, 97, 110, 117, 112, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 44, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 117, 112, 108, 111, 97, 100, 44, 82, 101, 115, 116, 111, 114, 101, 32, 111, 114, 105, 103, 105, 110, 97, 108, 32, 109, 97, 118, 101, 110, 32, 115, 101, 116, 116, 105, 110, 103, 115, 44, 64, 114, 101, 113, 47, 109, 97, 118, 101, 110, 95, 114, 101, 115, 116, 111, 114, 101, 95, 115, 101, 116, 116, 105, 110, 103, 115, 46, 106, 115, 111, 110, 44, 36, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 44, 44, 44, 13, 10, 44, 115, 116, 111, 114, 97, 103, 101, 44, 114, 101, 109, 111, 118, 101, 44, 82, 101, 109, 111, 118, 101, 32, 98, 97, 99, 107, 117, 112, 32, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 44, 64, 114, 101, 113, 47, 109, 97, 118, 101, 110, 95, 114, 101, 109, 111, 118, 101, 95, 98, 97, 99, 107, 117, 112, 95, 115, 101, 116, 116, 105, 110, 103, 115, 46, 106, 115, 111, 110, 44, 36, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 44, 44, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/vc_maven_module_build.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/copyPom.yaml", bytes.NewReader([]byte{116, 114, 97, 110, 115, 102, 101, 114, 115, 58, 10, 32, 32, 45, 32, 115, 111, 117, 114, 99, 101, 58, 10, 32, 32, 32, 32, 32, 32, 85, 82, 76, 58, 32, 36, 112, 97, 114, 101, 110, 116, 80, 111, 109, 85, 114, 108, 10, 32, 32, 32, 32, 32, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 111, 114, 105, 103, 105, 110, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 10, 32, 32, 32, 32, 100, 101, 115, 116, 58, 10, 32, 32, 32, 32, 32, 32, 85, 82, 76, 58, 32, 36, 123, 116, 97, 114, 103, 101, 116, 85, 114, 108, 125, 10, 32, 32, 32, 32, 32, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 10, 32, 32, 32, 32, 101, 120, 112, 97, 110, 100, 58, 32, 116, 114, 117, 101, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/copyPom.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_get_active_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 10, 32, 32, 125, 44, 10, 32, 32, 34, 68, 101, 115, 116, 75, 101, 121, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_get_active_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_remove_backup_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 65, 115, 115, 101, 116, 115, 34, 58, 32, 91, 10, 32, 32, 32, 32, 123, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 46, 98, 97, 99, 107, 117, 112, 34, 10, 32, 32, 32, 32, 125, 10, 32, 32, 93, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_remove_backup_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/checkout.yaml", bytes.NewReader([]byte{111, 114, 105, 103, 105, 110, 58, 32, 36, 111, 114, 105, 103, 105, 110, 10, 109, 111, 100, 117, 108, 101, 115, 58, 32, 36, 109, 111, 100, 117, 108, 101, 115, 10, 100, 101, 115, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/checkout.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_restore_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 75, 101, 121, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 10, 32, 32, 125, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_restore_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_get_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 34, 58, 32, 34, 36, 109, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 75, 101, 121, 34, 58, 32, 34, 119, 111, 114, 107, 102, 108, 111, 119, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_get_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_backup_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 75, 101, 121, 34, 58, 32, 34, 111, 114, 105, 103, 105, 110, 97, 108, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 46, 98, 97, 99, 107, 117, 112, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 44, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 98, 97, 99, 107, 117, 112, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 10, 32, 32, 125, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_backup_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_set_settings.json", bytes.NewReader([]byte{123, 10, 32, 32, 34, 83, 111, 117, 114, 99, 101, 75, 101, 121, 34, 58, 32, 34, 119, 111, 114, 107, 102, 108, 111, 119, 77, 97, 118, 101, 110, 83, 101, 116, 116, 105, 110, 103, 115, 34, 44, 10, 32, 32, 34, 68, 101, 115, 116, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 36, 123, 101, 110, 118, 46, 72, 79, 77, 69, 125, 47, 46, 109, 50, 47, 115, 101, 116, 116, 105, 110, 103, 115, 46, 120, 109, 108, 34, 44, 10, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 36, 123, 116, 97, 114, 103, 101, 116, 72, 111, 115, 116, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 125, 34, 10, 32, 32, 125, 10, 125}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/maven_set_settings.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/vc_maven_module_build/req/build.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 98, 117, 105, 108, 100, 84, 97, 114, 103, 101, 116, 10, 98, 117, 105, 108, 100, 83, 112, 101, 99, 58, 10, 32, 32, 110, 97, 109, 101, 58, 32, 109, 97, 118, 101, 110, 10, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 36, 109, 97, 118, 101, 110, 86, 101, 114, 115, 105, 111, 110, 10, 32, 32, 103, 111, 97, 108, 58, 32, 98, 117, 105, 108, 100, 10, 32, 32, 98, 117, 105, 108, 100, 71, 111, 97, 108, 58, 32, 36, 98, 117, 105, 108, 100, 71, 111, 97, 108, 10, 32, 32, 97, 114, 103, 115, 58, 32, 36, 98, 117, 105, 108, 100, 65, 114, 103, 115, 10, 32, 32, 115, 100, 107, 58, 32, 106, 100, 107, 10, 32, 32, 115, 100, 107, 86, 101, 114, 115, 105, 111, 110, 58, 32, 36, 106, 100, 107, 86, 101, 114, 115, 105, 111, 110, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/vc_maven_module_build/req/build.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/README.md", bytes.NewReader([]byte{35, 35, 35, 35, 32, 83, 101, 114, 118, 105, 99, 101, 115, 10, 10, 42, 42, 87, 111, 114, 107, 102, 108, 111, 119, 32, 115, 101, 114, 118, 105, 99, 101, 115, 58, 42, 42, 10, 10, 124, 32, 78, 97, 109, 101, 32, 124, 32, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 32, 124, 10, 124, 32, 45, 45, 45, 45, 32, 124, 32, 45, 45, 45, 32, 124, 10, 124, 32, 91, 97, 101, 114, 111, 115, 112, 105, 107, 101, 93, 40, 97, 101, 114, 111, 115, 112, 105, 107, 101, 47, 41, 32, 124, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 44, 32, 32, 116, 101, 115, 116, 32, 97, 110, 100, 32, 119, 97, 105, 116, 32, 105, 102, 32, 105, 116, 32, 105, 115, 32, 114, 101, 97, 100, 121, 32, 116, 111, 32, 117, 115, 101, 32, 124, 10, 124, 32, 91, 109, 121, 115, 113, 108, 93, 40, 109, 121, 115, 113, 108, 47, 41, 32, 124, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 109, 121, 115, 113, 108, 44, 32, 32, 116, 101, 115, 116, 32, 97, 110, 100, 32, 119, 97, 105, 116, 32, 116, 105, 108, 108, 32, 105, 116, 32, 105, 115, 32, 114, 101, 97, 100, 121, 32, 116, 111, 32, 117, 115, 101, 44, 32, 101, 120, 112, 111, 114, 116, 44, 32, 105, 109, 112, 111, 114, 116, 115, 32, 100, 97, 116, 97, 32, 124, 10, 124, 32, 91, 112, 111, 115, 116, 103, 114, 101, 115, 115, 93, 40, 112, 103, 47, 41, 32, 124, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 112, 111, 115, 116, 103, 114, 101, 115, 83, 81, 76, 44, 32, 116, 101, 115, 116, 32, 97, 110, 100, 32, 119, 97, 105, 116, 32, 116, 105, 108, 108, 32, 105, 116, 32, 105, 115, 32, 114, 101, 97, 100, 121, 32, 116, 111, 32, 117, 115, 101, 32, 124, 10, 124, 32, 91, 109, 101, 109, 99, 97, 99, 104, 101, 100, 93, 40, 109, 101, 109, 99, 97, 99, 104, 101, 100, 47, 41, 32, 124, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 124, 10, 124, 32, 91, 109, 111, 110, 103, 111, 68, 66, 93, 40, 109, 111, 110, 103, 111, 47, 41, 32, 124, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 109, 111, 110, 103, 111, 68, 66, 44, 32, 116, 101, 115, 116, 32, 97, 110, 100, 32, 119, 97, 105, 116, 32, 116, 105, 108, 108, 32, 105, 116, 32, 105, 115, 32, 114, 101, 97, 100, 121, 32, 116, 111, 32, 117, 115, 101, 32, 32, 124, 10, 32, 10, 10, 35, 35, 35, 35, 35, 32, 117, 115, 97, 103, 101, 58, 10, 32, 10, 96, 96, 96, 98, 97, 115, 104, 10, 35, 32, 99, 97, 108, 108, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 116, 97, 115, 107, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 109, 121, 115, 113, 108, 32, 45, 116, 61, 115, 116, 97, 114, 116, 10, 96, 96, 96, 10, 32, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/memcached/memcached.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 73, 110, 105, 116, 13, 10, 44, 44, 109, 101, 109, 99, 97, 99, 104, 101, 100, 44, 109, 97, 110, 97, 103, 101, 115, 32, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 84, 97, 115, 107, 115, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 100, 111, 99, 107, 101, 114, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 83, 116, 97, 114, 116, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 115, 116, 97, 114, 116, 32, 100, 111, 99, 107, 101, 114, 32, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 115, 101, 114, 118, 105, 99, 101, 44, 64, 114, 101, 113, 47, 114, 117, 110, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 13, 10, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 100, 111, 99, 107, 101, 114, 32, 109, 121, 115, 113, 108, 44, 37, 83, 116, 111, 112, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 100, 111, 99, 107, 101, 114, 32, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 115, 101, 114, 118, 105, 99, 101, 44, 64, 114, 101, 113, 47, 115, 116, 111, 112, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/memcached/memcached.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/memcached/var/init.json", bytes.NewReader([]byte{91, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 34, 109, 101, 109, 99, 97, 99, 104, 101, 100, 95, 101, 110, 100, 108, 121, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 109, 97, 120, 77, 101, 109, 111, 114, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 109, 97, 120, 77, 101, 109, 111, 114, 121, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 109, 97, 120, 77, 101, 109, 111, 114, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 109, 97, 120, 77, 101, 109, 111, 114, 121, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 34, 53, 49, 50, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 108, 97, 116, 101, 115, 116, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 108, 97, 116, 101, 115, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 34, 97, 108, 112, 105, 110, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 34, 108, 105, 98, 114, 97, 114, 121, 47, 109, 101, 109, 99, 97, 99, 104, 101, 100, 58, 36, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 13, 10, 32, 32, 32, 32, 125, 13, 10, 32, 32, 125, 13, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/memcached/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/memcached/README.md", bytes.NewReader([]byte{35, 35, 32, 77, 101, 109, 99, 97, 99, 104, 101, 100, 32, 119, 111, 114, 107, 102, 108, 111, 119, 10, 10, 10, 35, 35, 35, 32, 83, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 115, 101, 114, 118, 105, 99, 101, 32, 10, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 114, 117, 110, 95, 10, 96, 96, 96, 98, 97, 115, 104, 10, 35, 32, 99, 97, 108, 108, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 116, 97, 115, 107, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 45, 116, 61, 115, 116, 97, 114, 116, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 45, 116, 61, 115, 116, 111, 112, 10, 10, 10, 35, 111, 114, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 109, 101, 109, 99, 97, 99, 104, 101, 100, 32, 45, 116, 61, 115, 116, 97, 114, 116, 32, 109, 97, 120, 77, 101, 109, 111, 114, 121, 61, 49, 103, 10, 96, 96, 96, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 95, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 114, 61, 114, 117, 110, 10, 96, 96, 96, 10, 10, 42, 42, 80, 105, 112, 101, 108, 105, 110, 101, 32, 109, 117, 108, 116, 105, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 10, 96, 96, 96, 121, 97, 109, 108, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 32, 32, 115, 101, 114, 118, 105, 99, 101, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 115, 101, 114, 118, 105, 99, 101, 47, 109, 101, 109, 99, 97, 99, 104, 101, 100, 10, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 67, 97, 99, 104, 101, 49, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 112, 114, 105, 110, 116, 10, 32, 32, 32, 32, 109, 101, 115, 115, 97, 103, 101, 58, 32, 98, 117, 105, 108, 100, 105, 110, 103, 32, 97, 112, 112, 32, 46, 46, 46, 10, 96, 96, 96, 10, 10, 42, 42, 83, 105, 110, 103, 108, 101, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 32, 10, 96, 96, 96, 121, 97, 109, 108, 10, 110, 97, 109, 101, 58, 32, 115, 101, 114, 118, 105, 99, 101, 47, 109, 101, 109, 99, 97, 99, 104, 101, 100, 10, 116, 97, 115, 107, 115, 58, 32, 115, 116, 97, 114, 116, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 67, 97, 99, 104, 101, 49, 10, 32, 32, 109, 97, 120, 77, 101, 109, 111, 114, 121, 58, 32, 49, 48, 50, 52, 10, 96, 96, 96, 10, 10, 64, 114, 117, 110, 46, 106, 115, 111, 110, 10, 96, 96, 96, 106, 115, 111, 110, 10, 123, 10, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 47, 109, 101, 109, 99, 97, 99, 104, 101, 100, 34, 44, 10, 32, 32, 34, 84, 97, 115, 107, 115, 34, 58, 32, 34, 115, 116, 97, 114, 116, 34, 44, 10, 32, 32, 34, 80, 97, 114, 97, 109, 115, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 109, 121, 67, 97, 99, 104, 101, 49, 34, 44, 10, 32, 32, 32, 32, 34, 109, 97, 120, 77, 101, 109, 111, 114, 121, 34, 58, 34, 49, 48, 50, 52, 34, 10, 32, 32, 125, 10, 125, 10, 96, 96, 96, 10, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/memcached/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/memcached/req/run.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 34, 45, 109, 34, 58, 32, 36, 109, 97, 120, 77, 101, 109, 111, 114, 121}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/memcached/req/run.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/memcached/req/stop.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/memcached/req/stop.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/pg.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 44, 73, 110, 105, 116, 44, 44, 13, 10, 44, 44, 112, 103, 44, 109, 97, 110, 97, 103, 101, 115, 32, 112, 111, 115, 116, 103, 114, 101, 115, 115, 32, 100, 111, 99, 107, 101, 114, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 84, 97, 115, 107, 115, 44, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 100, 111, 99, 107, 101, 114, 32, 112, 111, 115, 116, 103, 114, 101, 115, 115, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 83, 116, 97, 114, 116, 44, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 80, 111, 115, 116, 44, 13, 10, 44, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 99, 111, 112, 121, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 116, 111, 32, 116, 101, 109, 112, 32, 108, 111, 99, 97, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 99, 111, 112, 121, 44, 36, 104, 97, 115, 67, 111, 110, 102, 105, 103, 58, 49, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 83, 111, 117, 114, 99, 101, 75, 101, 121, 44, 82, 101, 113, 117, 101, 115, 116, 46, 67, 97, 115, 101, 115, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 115, 119, 105, 116, 99, 104, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 99, 117, 115, 116, 111, 109, 32, 99, 111, 110, 102, 105, 103, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 117, 112, 112, 108, 105, 101, 100, 44, 104, 97, 115, 67, 111, 110, 102, 105, 103, 44, 37, 82, 117, 110, 67, 97, 115, 101, 44, 44, 13, 10, 91, 93, 82, 117, 110, 67, 97, 115, 101, 44, 86, 97, 108, 117, 101, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 49, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 112, 111, 115, 116, 103, 114, 101, 115, 115, 32, 36, 110, 97, 109, 101, 32, 119, 105, 116, 104, 32, 99, 117, 115, 116, 111, 109, 32, 99, 111, 110, 102, 105, 103, 44, 64, 114, 101, 113, 47, 114, 117, 110, 45, 119, 105, 116, 104, 45, 99, 111, 110, 102, 44, 44, 44, 13, 10, 44, 48, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 112, 111, 115, 116, 103, 114, 101, 115, 115, 32, 36, 110, 97, 109, 101, 32, 119, 105, 116, 104, 32, 100, 101, 102, 97, 117, 108, 116, 32, 99, 111, 110, 102, 105, 103, 44, 64, 114, 101, 113, 47, 114, 117, 110, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 114, 101, 103, 105, 115, 116, 101, 114, 44, 114, 101, 103, 105, 115, 116, 101, 114, 32, 116, 101, 115, 116, 32, 100, 98, 32, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 114, 101, 103, 105, 115, 116, 101, 114, 44, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 44, 44, 99, 104, 101, 99, 107, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 115, 116, 97, 114, 116, 101, 100, 44, 37, 67, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 67, 104, 101, 99, 107, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 87, 104, 101, 110, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 113, 117, 101, 114, 121, 44, 114, 117, 110, 32, 116, 101, 115, 116, 32, 113, 117, 101, 114, 121, 44, 64, 114, 101, 113, 47, 113, 117, 101, 114, 121, 44, 32, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 36, 115, 116, 97, 116, 117, 115, 58, 47, 69, 79, 70, 47, 44, 51, 48, 48, 48, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 100, 111, 99, 107, 101, 114, 32, 112, 111, 115, 116, 103, 114, 101, 115, 115, 44, 37, 83, 116, 111, 112, 44, 44, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 100, 111, 99, 107, 101, 114, 32, 112, 111, 115, 116, 103, 114, 101, 115, 115, 32, 115, 101, 114, 118, 105, 99, 101, 44, 64, 114, 101, 113, 47, 115, 116, 111, 112, 44, 44, 44, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/pg.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/var/init.json", bytes.NewReader([]byte{91, 13, 10, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 112, 103, 95, 101, 110, 100, 108, 121, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 13, 10, 32, 32, 32, 32, 125, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 57, 46, 54, 45, 97, 108, 112, 105, 110, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 101, 109, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 118, 105, 97, 110, 116, 47, 101, 110, 100, 108, 121, 47, 119, 111, 114, 107, 102, 108, 111, 119, 47, 115, 101, 114, 118, 105, 99, 101, 47, 112, 103, 47, 115, 101, 99, 114, 101, 116, 46, 106, 115, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 112, 111, 115, 116, 103, 114, 101, 115, 58, 36, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 110, 102, 105, 103, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 104, 97, 115, 67, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 111, 117, 116, 46, 99, 111, 110, 102, 105, 103, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 111, 117, 116, 46, 99, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 49, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 34, 48, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 110, 97, 109, 101, 125, 46, 99, 110, 102, 34, 13, 10, 32, 32, 125, 13, 10, 93, 13, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/var/status.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 116, 97, 116, 117, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 77, 101, 115, 115, 97, 103, 101, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/var/status.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/README.md", bytes.NewReader([]byte{35, 35, 32, 80, 111, 115, 116, 103, 114, 101, 115, 115, 32, 119, 111, 114, 107, 102, 108, 111, 119, 10, 10, 10, 35, 35, 35, 83, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 115, 101, 114, 118, 105, 99, 101, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 114, 117, 110, 95, 10, 96, 96, 96, 98, 97, 115, 104, 10, 35, 32, 99, 97, 108, 108, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 116, 97, 115, 107, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 32, 32, 32, 32, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 112, 103, 32, 45, 116, 61, 115, 116, 97, 114, 116, 10, 10, 35, 111, 114, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 112, 103, 32, 45, 116, 61, 115, 116, 97, 114, 116, 32, 110, 97, 109, 101, 61, 109, 121, 100, 98, 49, 10, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 112, 103, 32, 45, 116, 61, 115, 116, 111, 112, 10, 96, 96, 96, 10, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 95, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 114, 61, 114, 117, 110, 10, 96, 96, 96, 10, 10, 42, 42, 80, 105, 112, 101, 108, 105, 110, 101, 32, 109, 117, 108, 116, 105, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 10, 96, 96, 96, 121, 97, 109, 108, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 32, 32, 115, 101, 114, 118, 105, 99, 101, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 47, 112, 103, 58, 115, 116, 97, 114, 116, 34, 10, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 108, 97, 116, 101, 115, 116, 10, 32, 32, 32, 32, 99, 111, 110, 102, 105, 103, 58, 32, 36, 80, 119, 100, 40, 99, 111, 110, 102, 47, 112, 111, 115, 116, 103, 114, 101, 115, 115, 46, 99, 111, 110, 102, 41, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 112, 114, 105, 110, 116, 10, 32, 32, 32, 32, 109, 101, 115, 115, 97, 103, 101, 58, 32, 98, 117, 105, 108, 100, 105, 110, 103, 32, 97, 112, 112, 32, 46, 46, 46, 10, 10, 96, 96, 96, 10, 10, 10, 42, 42, 83, 105, 110, 103, 108, 101, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 32, 10, 96, 96, 96, 121, 97, 109, 108, 10, 110, 97, 109, 101, 58, 32, 115, 101, 114, 118, 105, 99, 101, 47, 112, 103, 10, 116, 97, 115, 107, 115, 58, 32, 115, 116, 97, 114, 116, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 115, 101, 99, 114, 101, 116, 46, 106, 115, 111, 110, 10, 32, 32, 10, 96, 96, 96, 10, 10, 42, 42, 68, 101, 102, 97, 117, 108, 116, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 58, 42, 42, 32, 10, 68, 101, 102, 97, 117, 108, 116, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 32, 102, 105, 108, 101, 32, 117, 115, 101, 115, 32, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 58, 32, 114, 111, 111, 116, 47, 100, 101, 118, 10, 10, 10, 64, 114, 117, 110, 46, 106, 115, 111, 110, 10, 96, 96, 96, 106, 115, 111, 110, 10, 123, 10, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 47, 112, 103, 34, 44, 10, 32, 32, 34, 84, 97, 115, 107, 115, 34, 58, 32, 34, 36, 116, 97, 115, 107, 115, 34, 44, 10, 32, 32, 34, 80, 97, 114, 97, 109, 115, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 116, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 99, 111, 110, 102, 105, 103, 34, 58, 32, 34, 36, 99, 111, 110, 102, 105, 103, 34, 44, 10, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 36, 105, 110, 115, 116, 97, 110, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 118, 101, 114, 115, 105, 111, 110, 34, 10, 32, 32, 125, 10, 125, 10, 96, 96, 96, 10, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/req/copy.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 97, 115, 115, 101, 116, 115, 58, 10, 32, 32, 36, 99, 111, 110, 102, 105, 103, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/req/copy.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/req/run-with-conf.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 109, 111, 117, 110, 116, 58, 10, 32, 32, 34, 36, 123, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103, 125, 34, 58, 32, 47, 101, 116, 99, 47, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 47, 112, 111, 115, 116, 103, 114, 101, 115, 113, 108, 46, 99, 111, 110, 102, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 32, 34, 53, 52, 51, 50, 34, 58, 32, 34, 53, 52, 51, 50, 34, 10, 101, 110, 118, 58, 10, 32, 32, 32, 80, 79, 83, 84, 71, 82, 69, 83, 95, 80, 65, 83, 83, 87, 79, 82, 68, 58, 32, 34, 42, 42, 112, 103, 42, 42, 34, 10, 32, 32, 32, 80, 79, 83, 84, 71, 82, 69, 83, 95, 85, 83, 69, 82, 58, 32, 35, 35, 112, 103, 35, 35, 10, 115, 101, 99, 114, 101, 116, 115, 58, 10, 32, 32, 112, 103, 58, 32, 34, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/req/run-with-conf.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/req/query.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 115, 113, 108, 58, 32, 83, 69, 76, 69, 67, 84, 32, 99, 117, 114, 114, 101, 110, 116, 95, 100, 97, 116, 97, 98, 97, 115, 101, 40, 41, 32, 65, 83, 32, 110, 97, 109, 101, 10, 105, 103, 110, 111, 114, 101, 69, 114, 114, 111, 114, 58, 32, 116, 114, 117, 101}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/req/query.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/req/register.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 99, 111, 110, 102, 105, 103, 58, 10, 32, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 58, 32, 34, 104, 111, 115, 116, 61, 49, 50, 55, 46, 48, 46, 48, 46, 49, 32, 112, 111, 114, 116, 61, 53, 52, 51, 50, 32, 117, 115, 101, 114, 61, 91, 117, 115, 101, 114, 110, 97, 109, 101, 93, 32, 112, 97, 115, 115, 119, 111, 114, 100, 61, 91, 112, 97, 115, 115, 119, 111, 114, 100, 93, 32, 100, 98, 110, 97, 109, 101, 61, 112, 111, 115, 116, 103, 114, 101, 115, 32, 115, 115, 108, 109, 111, 100, 101, 61, 100, 105, 115, 97, 98, 108, 101, 34, 10, 32, 32, 100, 114, 105, 118, 101, 114, 78, 97, 109, 101, 58, 32, 112, 111, 115, 116, 103, 114, 101, 115, 10, 32, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/req/register.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/req/run.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 32, 34, 53, 52, 51, 50, 34, 58, 32, 34, 53, 52, 51, 50, 34, 10, 101, 110, 118, 58, 10, 32, 32, 80, 79, 83, 84, 71, 82, 69, 83, 95, 80, 65, 83, 83, 87, 79, 82, 68, 58, 32, 34, 42, 42, 112, 103, 42, 42, 34, 10, 32, 32, 80, 79, 83, 84, 71, 82, 69, 83, 95, 85, 83, 69, 82, 58, 32, 34, 35, 35, 112, 103, 35, 35, 34, 10, 115, 101, 99, 114, 101, 116, 115, 58, 10, 32, 32, 112, 103, 58, 32, 34, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/req/run.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/req/stop.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/req/stop.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/req/goto_check.yaml", bytes.NewReader([]byte{116, 97, 115, 107, 58, 32, 99, 104, 101, 99, 107}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/req/goto_check.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/pg/secret.json", bytes.NewReader([]byte{123, 34, 85, 115, 101, 114, 110, 97, 109, 101, 34, 58, 34, 114, 111, 111, 116, 34, 44, 34, 69, 110, 99, 114, 121, 112, 116, 101, 100, 80, 97, 115, 115, 119, 111, 114, 100, 34, 58, 34, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 84, 47, 67, 78, 69, 47, 107, 89, 102, 55, 81, 61, 61, 34, 125, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/pg/secret.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/var/init.json", bytes.NewReader([]byte{91, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 97, 101, 114, 111, 115, 112, 105, 107, 101, 95, 101, 110, 100, 108, 121, 34, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 13, 10, 32, 32, 32, 32, 125, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 108, 97, 116, 101, 115, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 13, 10, 13, 10, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 123, 125, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 13, 10, 13, 10, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 97, 101, 114, 111, 115, 112, 105, 107, 101, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 45, 115, 101, 114, 118, 101, 114, 58, 36, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 110, 102, 105, 103, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 104, 97, 115, 67, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 111, 117, 116, 46, 99, 111, 110, 102, 105, 103, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 111, 117, 116, 46, 99, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 49, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 34, 48, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 110, 97, 109, 101, 125, 46, 99, 111, 110, 102, 34, 13, 10, 32, 32, 125, 13, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/var/status.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 116, 97, 116, 117, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 77, 101, 115, 115, 97, 103, 101, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/var/status.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/README.md", bytes.NewReader([]byte{35, 35, 32, 65, 101, 114, 111, 115, 112, 105, 107, 101, 32, 119, 111, 114, 107, 102, 108, 111, 119, 10, 10, 10, 35, 35, 35, 32, 83, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 115, 101, 114, 118, 105, 99, 101, 32, 10, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 114, 117, 110, 95, 10, 96, 96, 96, 98, 97, 115, 104, 10, 35, 32, 99, 97, 108, 108, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 116, 97, 115, 107, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 45, 116, 61, 115, 116, 97, 114, 116, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 45, 116, 61, 115, 116, 111, 112, 10, 10, 10, 35, 111, 114, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 45, 116, 61, 115, 116, 97, 114, 116, 32, 110, 97, 109, 101, 61, 109, 121, 68, 66, 10, 96, 96, 96, 10, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 95, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 114, 61, 114, 117, 110, 10, 96, 96, 96, 10, 10, 42, 42, 80, 105, 112, 101, 108, 105, 110, 101, 32, 109, 117, 108, 116, 105, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 10, 96, 96, 96, 121, 97, 109, 108, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 32, 32, 115, 101, 114, 118, 105, 99, 101, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 115, 101, 114, 118, 105, 99, 101, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 58, 115, 116, 97, 114, 116, 10, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 108, 97, 116, 101, 115, 116, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 112, 114, 105, 110, 116, 10, 32, 32, 32, 32, 109, 101, 115, 115, 97, 103, 101, 58, 32, 98, 117, 105, 108, 100, 105, 110, 103, 32, 97, 112, 112, 32, 46, 46, 46, 10, 96, 96, 96, 10, 10, 10, 42, 42, 83, 105, 110, 103, 108, 101, 32, 116, 97, 115, 107, 32, 114, 117, 110, 42, 42, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 32, 10, 96, 96, 96, 121, 97, 109, 108, 10, 110, 97, 109, 101, 58, 32, 115, 101, 114, 118, 105, 99, 101, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 10, 116, 97, 115, 107, 115, 58, 32, 115, 116, 97, 114, 116, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 108, 97, 116, 101, 115, 116, 10, 32, 32, 99, 111, 110, 102, 105, 103, 58, 32, 36, 80, 119, 100, 40, 99, 111, 110, 102, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 46, 99, 110, 102, 41, 10, 32, 32, 101, 110, 118, 58, 10, 32, 32, 32, 32, 78, 65, 77, 69, 83, 80, 65, 67, 69, 58, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 45, 100, 101, 109, 111, 10, 96, 96, 96, 10, 10, 64, 114, 117, 110, 46, 106, 115, 111, 110, 10, 96, 96, 96, 106, 115, 111, 110, 10, 123, 10, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 34, 44, 10, 32, 32, 34, 84, 97, 115, 107, 115, 34, 58, 32, 34, 36, 116, 97, 115, 107, 115, 34, 44, 10, 32, 32, 34, 80, 97, 114, 97, 109, 115, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 116, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 99, 111, 110, 102, 105, 103, 34, 58, 32, 34, 36, 99, 111, 110, 102, 105, 103, 34, 44, 10, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 36, 105, 110, 115, 116, 97, 110, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 118, 101, 114, 115, 105, 111, 110, 34, 10, 32, 32, 125, 10, 125, 10, 96, 96, 96, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/req/copy.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 97, 115, 115, 101, 116, 115, 58, 10, 32, 32, 36, 99, 111, 110, 102, 105, 103, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/req/copy.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/req/run-with-conf.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 109, 111, 117, 110, 116, 58, 10, 32, 32, 36, 123, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103, 125, 58, 32, 47, 111, 112, 116, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 47, 101, 116, 99, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 46, 99, 111, 110, 102, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 34, 51, 48, 48, 48, 34, 58, 32, 34, 51, 48, 48, 48, 34, 10, 32, 32, 34, 51, 48, 48, 49, 34, 58, 32, 34, 51, 48, 48, 49, 34, 10, 32, 32, 34, 51, 48, 48, 50, 34, 58, 32, 34, 51, 48, 48, 50, 34, 10, 32, 32, 34, 51, 48, 48, 52, 34, 58, 32, 34, 51, 48, 48, 52, 34, 10, 32, 32, 34, 56, 48, 56, 49, 34, 58, 32, 34, 56, 48, 56, 49, 34, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 34, 45, 45, 99, 111, 110, 102, 105, 103, 45, 102, 105, 108, 101, 34, 58, 32, 47, 111, 112, 116, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 47, 101, 116, 99, 47, 97, 101, 114, 111, 115, 112, 105, 107, 101, 46, 99, 111, 110, 102, 10, 101, 110, 118, 58, 32, 36, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/req/run-with-conf.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/req/query.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 115, 113, 108, 58, 32, 83, 69, 76, 69, 67, 84, 32, 105, 100, 32, 70, 82, 79, 77, 32, 100, 117, 109, 109, 121, 10, 105, 103, 110, 111, 114, 101, 69, 114, 114, 111, 114, 58, 32, 116, 114, 117, 101}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/req/query.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/req/register.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 99, 111, 110, 102, 105, 103, 58, 10, 32, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 58, 32, 34, 91, 117, 115, 101, 114, 110, 97, 109, 101, 93, 58, 91, 112, 97, 115, 115, 119, 111, 114, 100, 93, 64, 116, 99, 112, 40, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 51, 51, 48, 54, 41, 47, 91, 100, 98, 110, 97, 109, 101, 93, 63, 112, 97, 114, 115, 101, 84, 105, 109, 101, 61, 116, 114, 117, 101, 34, 10, 32, 32, 100, 114, 105, 118, 101, 114, 78, 97, 109, 101, 58, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 10, 32, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 58, 32, 34, 116, 99, 112, 40, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 51, 48, 48, 48, 41, 47, 91, 110, 97, 109, 101, 115, 112, 97, 99, 101, 93, 34, 10, 32, 32, 80, 97, 114, 97, 109, 101, 116, 101, 114, 115, 58, 10, 32, 32, 32, 32, 100, 98, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 10, 32, 32, 32, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 58, 32, 116, 101, 115, 116, 10, 32, 32, 32, 32, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 10, 32, 32, 32, 32, 112, 111, 114, 116, 58, 32, 51, 48, 48, 48, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/req/register.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/req/run.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 34, 51, 48, 48, 48, 34, 58, 32, 34, 51, 48, 48, 48, 34, 10, 32, 32, 34, 51, 48, 48, 49, 34, 58, 32, 34, 51, 48, 48, 49, 34, 10, 32, 32, 34, 51, 48, 48, 50, 34, 58, 32, 34, 51, 48, 48, 50, 34, 10, 32, 32, 34, 51, 48, 48, 52, 34, 58, 32, 34, 51, 48, 48, 52, 34, 10, 32, 32, 34, 56, 48, 56, 49, 34, 58, 32, 34, 56, 48, 56, 49, 34, 10, 101, 110, 118, 58, 32, 36, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/req/run.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/req/stop.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/req/stop.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/req/goto_check.yaml", bytes.NewReader([]byte{116, 97, 115, 107, 58, 32, 99, 104, 101, 99, 107}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/req/goto_check.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/aerospike/aerospike.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 44, 73, 110, 105, 116, 44, 13, 10, 44, 44, 44, 97, 101, 114, 111, 115, 112, 105, 107, 101, 44, 97, 101, 114, 111, 112, 115, 105, 107, 101, 32, 100, 111, 99, 107, 101, 114, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 84, 97, 115, 107, 115, 44, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 87, 104, 101, 110, 44, 44, 13, 10, 44, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 83, 116, 97, 114, 116, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 44, 13, 10, 44, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 99, 111, 112, 121, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 116, 111, 32, 116, 101, 109, 112, 32, 108, 111, 99, 97, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 99, 111, 112, 121, 44, 36, 104, 97, 115, 67, 111, 110, 102, 105, 103, 58, 49, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 83, 111, 117, 114, 99, 101, 75, 101, 121, 44, 82, 101, 113, 117, 101, 115, 116, 46, 67, 97, 115, 101, 115, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 115, 119, 105, 116, 99, 104, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 99, 117, 115, 116, 111, 109, 32, 99, 111, 110, 102, 105, 103, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 117, 112, 112, 108, 105, 101, 100, 44, 104, 97, 115, 67, 111, 110, 102, 105, 103, 44, 37, 82, 117, 110, 67, 97, 115, 101, 44, 44, 13, 10, 91, 93, 82, 117, 110, 67, 97, 115, 101, 44, 86, 97, 108, 117, 101, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 49, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 36, 110, 97, 109, 101, 32, 119, 105, 116, 104, 32, 99, 117, 115, 116, 111, 109, 32, 99, 111, 110, 102, 105, 103, 44, 64, 114, 101, 113, 47, 114, 117, 110, 45, 119, 105, 116, 104, 45, 99, 111, 110, 102, 44, 44, 44, 13, 10, 44, 48, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 36, 110, 97, 109, 101, 32, 119, 105, 116, 104, 32, 100, 101, 102, 97, 117, 108, 116, 32, 99, 111, 110, 102, 105, 103, 44, 64, 114, 101, 113, 47, 114, 117, 110, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 44, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 114, 101, 103, 105, 115, 116, 101, 114, 44, 114, 101, 103, 105, 115, 116, 101, 114, 32, 116, 101, 115, 116, 32, 100, 98, 32, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 114, 101, 103, 105, 115, 116, 101, 114, 44, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 44, 44, 99, 104, 101, 99, 107, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 115, 116, 97, 114, 116, 101, 100, 44, 37, 67, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 67, 104, 101, 99, 107, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 87, 104, 101, 110, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 113, 117, 101, 114, 121, 44, 114, 117, 110, 32, 116, 101, 115, 116, 32, 113, 117, 101, 114, 121, 44, 64, 114, 101, 113, 47, 113, 117, 101, 114, 121, 44, 32, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 36, 115, 116, 97, 116, 117, 115, 58, 47, 105, 115, 32, 110, 111, 116, 32, 121, 101, 116, 32, 102, 117, 108, 108, 121, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100, 47, 44, 49, 48, 48, 48, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 36, 110, 97, 109, 101, 44, 37, 83, 116, 111, 112, 44, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 44, 100, 111, 99, 107, 101, 114, 44, 115, 116, 111, 112, 44, 115, 116, 97, 114, 116, 32, 97, 101, 114, 111, 115, 112, 105, 107, 101, 32, 36, 110, 97, 109, 101, 44, 64, 114, 101, 113, 47, 115, 116, 111, 112, 44, 44, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/aerospike/aerospike.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/mysql.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 44, 73, 110, 105, 116, 44, 44, 13, 10, 44, 44, 109, 121, 115, 113, 108, 44, 109, 97, 110, 97, 103, 101, 115, 32, 109, 121, 115, 113, 108, 32, 100, 111, 99, 107, 101, 114, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 84, 97, 115, 107, 115, 44, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 100, 111, 99, 107, 101, 114, 32, 109, 121, 115, 113, 108, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 83, 116, 97, 114, 116, 44, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 87, 104, 101, 110, 44, 80, 111, 115, 116, 44, 13, 10, 44, 44, 100, 97, 101, 109, 111, 110, 44, 115, 116, 97, 116, 117, 115, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 115, 121, 115, 116, 101, 109, 32, 109, 121, 115, 113, 108, 32, 115, 101, 114, 118, 105, 99, 101, 32, 105, 115, 32, 114, 117, 110, 110, 105, 110, 103, 44, 64, 114, 101, 113, 47, 115, 101, 114, 118, 105, 99, 101, 44, 36, 112, 97, 114, 97, 109, 115, 46, 115, 116, 111, 112, 83, 121, 115, 116, 101, 109, 77, 121, 115, 113, 108, 58, 116, 114, 117, 101, 44, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 13, 10, 44, 44, 100, 97, 101, 109, 111, 110, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 109, 121, 115, 113, 108, 32, 115, 121, 115, 116, 101, 109, 32, 115, 101, 114, 118, 105, 99, 101, 44, 64, 114, 101, 113, 47, 115, 101, 114, 118, 105, 99, 101, 44, 36, 115, 101, 114, 118, 105, 99, 101, 83, 116, 97, 116, 117, 115, 58, 114, 117, 110, 110, 105, 110, 103, 44, 44, 13, 10, 44, 44, 115, 116, 111, 114, 97, 103, 101, 44, 99, 111, 112, 121, 44, 99, 111, 112, 121, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 116, 111, 32, 116, 101, 109, 112, 32, 108, 111, 99, 97, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 99, 111, 112, 121, 44, 36, 104, 97, 115, 67, 111, 110, 102, 105, 103, 58, 49, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 46, 83, 111, 117, 114, 99, 101, 75, 101, 121, 44, 82, 101, 113, 117, 101, 115, 116, 46, 67, 97, 115, 101, 115, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 115, 119, 105, 116, 99, 104, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 99, 117, 115, 116, 111, 109, 32, 99, 111, 110, 102, 105, 103, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 117, 112, 112, 108, 105, 101, 100, 44, 104, 97, 115, 67, 111, 110, 102, 105, 103, 44, 37, 82, 117, 110, 67, 97, 115, 101, 44, 44, 13, 10, 91, 93, 82, 117, 110, 67, 97, 115, 101, 44, 86, 97, 108, 117, 101, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 49, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 109, 121, 115, 113, 108, 32, 36, 110, 97, 109, 101, 32, 119, 105, 116, 104, 32, 99, 117, 115, 116, 111, 109, 32, 99, 111, 110, 102, 105, 103, 44, 64, 114, 101, 113, 47, 114, 117, 110, 45, 119, 105, 116, 104, 45, 99, 111, 110, 102, 44, 44, 44, 13, 10, 44, 48, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 114, 117, 110, 32, 109, 121, 115, 113, 108, 32, 36, 110, 97, 109, 101, 32, 119, 105, 116, 104, 32, 100, 101, 102, 97, 117, 108, 116, 32, 99, 111, 110, 102, 105, 103, 44, 64, 114, 101, 113, 47, 114, 117, 110, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 114, 101, 103, 105, 115, 116, 101, 114, 44, 114, 101, 103, 105, 115, 116, 101, 114, 32, 116, 101, 115, 116, 32, 100, 98, 32, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 114, 101, 103, 105, 115, 116, 101, 114, 44, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 44, 44, 99, 104, 101, 99, 107, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 115, 116, 97, 114, 116, 101, 100, 44, 37, 67, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 67, 104, 101, 99, 107, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 87, 104, 101, 110, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 113, 117, 101, 114, 121, 44, 114, 117, 110, 32, 116, 101, 115, 116, 32, 113, 117, 101, 114, 121, 44, 64, 114, 101, 113, 47, 113, 117, 101, 114, 121, 44, 32, 64, 118, 97, 114, 47, 113, 117, 101, 114, 121, 95, 115, 116, 97, 116, 117, 115, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 36, 115, 116, 97, 116, 117, 115, 58, 47, 98, 97, 100, 32, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 47, 44, 51, 48, 48, 48, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 100, 111, 99, 107, 101, 114, 32, 109, 121, 115, 113, 108, 44, 37, 83, 116, 111, 112, 44, 44, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 100, 111, 99, 107, 101, 114, 32, 109, 121, 115, 113, 108, 32, 115, 101, 114, 118, 105, 99, 101, 44, 64, 114, 101, 113, 47, 115, 116, 111, 112, 44, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 101, 120, 112, 111, 114, 116, 44, 101, 120, 112, 111, 114, 116, 32, 109, 121, 115, 113, 108, 32, 115, 99, 104, 101, 109, 97, 32, 102, 114, 111, 109, 32, 100, 111, 99, 107, 101, 114, 44, 37, 69, 120, 112, 111, 114, 116, 44, 44, 44, 44, 13, 10, 91, 93, 69, 120, 112, 111, 114, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 101, 120, 101, 99, 44, 69, 120, 112, 111, 114, 116, 32, 97, 108, 108, 32, 100, 97, 116, 97, 98, 97, 115, 101, 115, 44, 64, 114, 101, 113, 47, 101, 120, 112, 111, 114, 116, 44, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 44, 13, 10, 44, 44, 105, 109, 112, 111, 114, 116, 44, 108, 111, 97, 100, 32, 109, 121, 115, 113, 108, 32, 100, 117, 109, 112, 44, 37, 73, 109, 112, 111, 114, 116, 44, 44, 44, 44, 13, 10, 91, 93, 73, 109, 112, 111, 114, 116, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 44, 13, 10, 44, 100, 111, 99, 107, 101, 114, 44, 101, 120, 101, 99, 44, 73, 109, 112, 111, 114, 116, 32, 109, 121, 115, 113, 108, 32, 100, 117, 109, 112, 44, 64, 114, 101, 113, 47, 105, 109, 112, 111, 114, 116, 44, 44, 44, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/mysql.csv %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/var/init.json", bytes.NewReader([]byte{91, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 101, 109, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 118, 105, 97, 110, 116, 47, 101, 110, 100, 108, 121, 47, 119, 111, 114, 107, 102, 108, 111, 119, 47, 115, 101, 114, 118, 105, 99, 101, 47, 109, 121, 115, 113, 108, 47, 115, 101, 99, 114, 101, 116, 46, 106, 115, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 121, 115, 113, 108, 95, 101, 110, 100, 108, 121, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 13, 10, 32, 32, 32, 32, 125, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 108, 97, 116, 101, 115, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 123, 125, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 13, 10, 32, 32, 125, 44, 13, 10, 13, 10, 13, 10, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 121, 115, 113, 108, 58, 36, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 99, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 99, 111, 110, 102, 105, 103, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 104, 97, 115, 67, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 111, 117, 116, 46, 99, 111, 110, 102, 105, 103, 58, 33, 47, 36, 47, 32, 38, 38, 32, 36, 111, 117, 116, 46, 99, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 49, 34, 44, 13, 10, 32, 32, 32, 32, 34, 69, 108, 115, 101, 34, 58, 32, 34, 48, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 47, 116, 109, 112, 47, 36, 123, 110, 97, 109, 101, 125, 46, 99, 110, 102, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 100, 117, 109, 112, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 32, 116, 114, 117, 101, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 100, 117, 109, 112, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 100, 117, 109, 112, 46, 115, 113, 108, 34, 13, 10, 32, 32, 125, 13, 10, 93, 13, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/var/query_status.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 116, 97, 116, 117, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 77, 101, 115, 115, 97, 103, 101, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/var/query_status.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/var/status.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 83, 116, 97, 116, 117, 115, 34, 44, 10, 32, 32, 32, 32, 34, 102, 114, 111, 109, 34, 58, 32, 34, 83, 116, 97, 116, 101, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/var/status.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/README.md", bytes.NewReader([]byte{35, 35, 32, 77, 121, 83, 81, 76, 32, 119, 111, 114, 107, 102, 108, 111, 119, 10, 10, 10, 35, 35, 35, 69, 120, 112, 111, 114, 116, 32, 97, 110, 100, 32, 105, 109, 112, 111, 114, 116, 10, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 32, 45, 116, 61, 101, 120, 112, 111, 114, 116, 32, 100, 117, 109, 112, 61, 39, 47, 116, 109, 112, 47, 111, 117, 116, 46, 115, 113, 108, 39, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 32, 45, 116, 61, 105, 109, 112, 111, 114, 116, 32, 100, 117, 109, 112, 61, 39, 47, 116, 109, 112, 47, 111, 117, 116, 46, 115, 113, 108, 39, 10, 96, 96, 96, 10, 10, 10, 35, 35, 35, 83, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 115, 101, 114, 118, 105, 99, 101, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 114, 117, 110, 95, 10, 96, 96, 96, 98, 97, 115, 104, 10, 35, 32, 99, 97, 108, 108, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 116, 97, 115, 107, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 32, 45, 116, 61, 115, 116, 97, 114, 116, 10, 10, 35, 111, 114, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 32, 45, 116, 61, 115, 116, 97, 114, 116, 32, 110, 97, 109, 101, 61, 109, 121, 100, 98, 49, 10, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 32, 45, 116, 61, 115, 116, 111, 112, 10, 96, 96, 96, 10, 10, 10, 10, 35, 35, 35, 35, 32, 95, 80, 105, 112, 101, 105, 110, 103, 32, 119, 111, 114, 107, 102, 108, 111, 119, 115, 47, 97, 99, 116, 105, 111, 110, 115, 95, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 112, 61, 114, 117, 110, 10, 96, 96, 96, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 10, 96, 96, 96, 121, 97, 109, 108, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 32, 32, 115, 101, 114, 118, 105, 99, 101, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 34, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 58, 115, 116, 97, 114, 116, 34, 10, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 108, 97, 116, 101, 115, 116, 10, 32, 32, 32, 32, 99, 111, 110, 102, 105, 103, 58, 32, 36, 80, 119, 100, 40, 99, 111, 110, 102, 47, 109, 121, 46, 99, 110, 102, 41, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 112, 114, 105, 110, 116, 10, 32, 32, 32, 32, 109, 101, 115, 115, 97, 103, 101, 58, 32, 98, 117, 105, 108, 100, 105, 110, 103, 32, 97, 112, 112, 32, 46, 46, 46, 10, 10, 96, 96, 96, 10, 10, 10, 42, 42, 83, 105, 110, 103, 108, 101, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 10, 96, 96, 96, 121, 97, 109, 108, 10, 110, 97, 109, 101, 58, 32, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 10, 116, 97, 115, 107, 115, 58, 32, 115, 116, 97, 114, 116, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 53, 46, 54, 10, 32, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 115, 101, 99, 114, 101, 116, 46, 106, 115, 111, 110, 10, 32, 32, 10, 96, 96, 96, 10, 10, 42, 42, 68, 101, 102, 97, 117, 108, 116, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 58, 42, 42, 32, 10, 68, 101, 102, 97, 117, 108, 116, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 32, 102, 105, 108, 101, 32, 117, 115, 101, 115, 32, 116, 104, 101, 32, 102, 111, 108, 108, 111, 119, 105, 110, 103, 58, 32, 114, 111, 111, 116, 47, 100, 101, 118, 10, 10, 10, 64, 114, 117, 110, 46, 106, 115, 111, 110, 10, 96, 96, 96, 106, 115, 111, 110, 10, 123, 10, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 100, 111, 99, 107, 101, 114, 47, 109, 121, 115, 113, 108, 34, 44, 10, 32, 32, 34, 84, 97, 115, 107, 115, 34, 58, 32, 34, 36, 116, 97, 115, 107, 115, 34, 44, 10, 32, 32, 34, 80, 97, 114, 97, 109, 115, 34, 58, 32, 123, 10, 32, 32, 32, 32, 34, 116, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 58, 32, 34, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 10, 32, 32, 32, 32, 34, 99, 111, 110, 102, 105, 103, 34, 58, 32, 34, 36, 99, 111, 110, 102, 105, 103, 34, 44, 10, 32, 32, 32, 32, 34, 110, 97, 109, 101, 34, 58, 32, 34, 36, 105, 110, 115, 116, 97, 110, 99, 101, 34, 44, 10, 32, 32, 32, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 58, 32, 34, 36, 118, 101, 114, 115, 105, 111, 110, 34, 10, 32, 32, 125, 10, 125, 10, 96, 96, 96, 10, 10, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/export.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 99, 111, 109, 109, 97, 110, 100, 58, 32, 109, 121, 115, 113, 108, 100, 117, 109, 112, 32, 32, 45, 117, 114, 111, 111, 116, 32, 45, 112, 42, 42, 109, 121, 115, 113, 108, 42, 42, 32, 45, 45, 97, 108, 108, 45, 100, 97, 116, 97, 98, 97, 115, 101, 115, 32, 45, 45, 114, 111, 117, 116, 105, 110, 101, 115, 32, 124, 32, 103, 114, 101, 112, 32, 45, 118, 32, 39, 87, 97, 114, 110, 105, 110, 103, 39, 32, 62, 32, 36, 100, 117, 109, 112, 10, 105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101, 58, 32, 116, 114, 117, 101, 10, 97, 108, 108, 111, 99, 97, 116, 101, 84, 101, 114, 109, 105, 110, 97, 108, 58, 32, 116, 114, 117, 101, 10, 115, 101, 99, 114, 101, 116, 115, 58, 10, 32, 32, 109, 121, 115, 113, 108, 58, 32, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/export.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/copy.yaml", bytes.NewReader([]byte{115, 111, 117, 114, 99, 101, 58, 32, 36, 116, 97, 114, 103, 101, 116, 10, 100, 101, 115, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 97, 115, 115, 101, 116, 115, 58, 10, 32, 32, 36, 99, 111, 110, 102, 105, 103, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/copy.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/run-with-conf.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 109, 111, 117, 110, 116, 58, 10, 32, 32, 34, 36, 123, 115, 101, 114, 118, 105, 99, 101, 67, 111, 110, 102, 105, 103, 125, 34, 58, 32, 47, 101, 116, 99, 47, 109, 121, 46, 99, 110, 102, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 32, 34, 51, 51, 48, 54, 34, 58, 32, 34, 51, 51, 48, 54, 34, 10, 101, 110, 118, 58, 10, 32, 32, 32, 77, 89, 83, 81, 76, 95, 82, 79, 79, 84, 95, 80, 65, 83, 83, 87, 79, 82, 68, 58, 32, 34, 42, 42, 109, 121, 115, 113, 108, 42, 42, 34, 10, 115, 101, 99, 114, 101, 116, 115, 58, 10, 32, 32, 109, 121, 115, 113, 108, 58, 32, 34, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/run-with-conf.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/service.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 115, 101, 114, 118, 105, 99, 101, 58, 32, 109, 121, 115, 113, 108, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/service.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/import.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 99, 111, 109, 109, 97, 110, 100, 58, 32, 109, 121, 115, 113, 108, 32, 32, 45, 117, 114, 111, 111, 116, 32, 45, 112, 42, 42, 109, 121, 115, 113, 108, 42, 42, 32, 60, 32, 36, 100, 117, 109, 112, 10, 105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101, 58, 32, 116, 114, 117, 101, 10, 115, 101, 99, 114, 101, 116, 115, 58, 10, 32, 32, 109, 121, 115, 113, 108, 58, 32, 34, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/import.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/query.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 115, 113, 108, 58, 32, 83, 69, 76, 69, 67, 84, 32, 78, 79, 87, 40, 41, 10, 105, 103, 110, 111, 114, 101, 69, 114, 114, 111, 114, 58, 32, 116, 114, 117, 101}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/query.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/register.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 99, 111, 110, 102, 105, 103, 58, 10, 32, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 58, 32, 34, 91, 117, 115, 101, 114, 110, 97, 109, 101, 93, 58, 91, 112, 97, 115, 115, 119, 111, 114, 100, 93, 64, 116, 99, 112, 40, 49, 50, 55, 46, 48, 46, 48, 46, 49, 58, 51, 51, 48, 54, 41, 47, 91, 100, 98, 110, 97, 109, 101, 93, 63, 112, 97, 114, 115, 101, 84, 105, 109, 101, 61, 116, 114, 117, 101, 34, 10, 32, 32, 100, 114, 105, 118, 101, 114, 78, 97, 109, 101, 58, 32, 109, 121, 115, 113, 108, 10, 32, 32, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 58, 32, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/register.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/run.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 32, 34, 51, 51, 48, 54, 34, 58, 32, 34, 51, 51, 48, 54, 34, 10, 101, 110, 118, 58, 10, 32, 32, 32, 77, 89, 83, 81, 76, 95, 82, 79, 79, 84, 95, 80, 65, 83, 83, 87, 79, 82, 68, 58, 32, 34, 42, 42, 109, 121, 115, 113, 108, 42, 42, 34, 10, 115, 101, 99, 114, 101, 116, 115, 58, 10, 32, 32, 109, 121, 115, 113, 108, 58, 32, 34, 36, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/run.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/stop.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/stop.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/req/goto_check.yaml", bytes.NewReader([]byte{116, 97, 115, 107, 58, 32, 99, 104, 101, 99, 107}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/req/goto_check.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mysql/secret.json", bytes.NewReader([]byte{123, 34, 85, 115, 101, 114, 110, 97, 109, 101, 34, 58, 34, 114, 111, 111, 116, 34, 44, 34, 69, 110, 99, 114, 121, 112, 116, 101, 100, 80, 97, 115, 115, 119, 111, 114, 100, 34, 58, 34, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 84, 47, 67, 78, 69, 47, 107, 89, 102, 55, 81, 61, 61, 34, 125, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mysql/secret.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/var/init.json", bytes.NewReader([]byte{91, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 110, 97, 109, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 110, 97, 109, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 111, 110, 111, 103, 95, 101, 110, 100, 108, 121, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 116, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 116, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 13, 10, 32, 32, 32, 32, 32, 32, 34, 85, 82, 76, 34, 58, 32, 34, 115, 115, 104, 58, 47, 47, 49, 50, 55, 46, 48, 46, 48, 46, 49, 47, 34, 44, 13, 10, 32, 32, 32, 32, 32, 32, 34, 67, 114, 101, 100, 101, 110, 116, 105, 97, 108, 115, 34, 58, 32, 34, 108, 111, 99, 97, 108, 104, 111, 115, 116, 34, 13, 10, 32, 32, 32, 32, 125, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 82, 101, 113, 117, 105, 114, 101, 100, 34, 58, 116, 114, 117, 101, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 123, 125, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 36, 116, 97, 114, 103, 101, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 118, 101, 114, 115, 105, 111, 110, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 118, 101, 114, 115, 105, 111, 110, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 108, 97, 116, 101, 115, 116, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 34, 13, 10, 32, 32, 125, 44, 13, 10, 32, 32, 123, 13, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 105, 109, 97, 103, 101, 34, 44, 13, 10, 32, 32, 32, 32, 34, 87, 104, 101, 110, 34, 58, 32, 34, 36, 105, 110, 46, 112, 97, 114, 97, 109, 115, 46, 105, 109, 97, 103, 101, 58, 47, 36, 47, 34, 44, 13, 10, 32, 32, 32, 32, 34, 86, 97, 108, 117, 101, 34, 58, 32, 34, 109, 111, 110, 103, 111, 58, 36, 118, 101, 114, 115, 105, 111, 110, 34, 13, 10, 32, 32, 125, 13, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/var/init.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/var/status.json", bytes.NewReader([]byte{91, 10, 32, 32, 123, 10, 32, 32, 32, 32, 34, 78, 97, 109, 101, 34, 58, 32, 34, 115, 116, 97, 116, 117, 115, 34, 44, 10, 32, 32, 32, 32, 34, 70, 114, 111, 109, 34, 58, 32, 34, 77, 101, 115, 115, 97, 103, 101, 34, 10, 32, 32, 125, 10, 93}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/var/status.json %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/README.md", bytes.NewReader([]byte{35, 35, 32, 109, 111, 110, 103, 111, 32, 119, 111, 114, 107, 102, 108, 111, 119, 10, 10, 10, 35, 35, 35, 32, 83, 116, 97, 114, 116, 47, 115, 116, 111, 112, 32, 115, 101, 114, 118, 105, 99, 101, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 114, 117, 110, 95, 10, 96, 96, 96, 98, 97, 115, 104, 10, 35, 32, 99, 97, 108, 108, 32, 119, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 116, 97, 115, 107, 32, 115, 116, 97, 114, 116, 47, 115, 116, 111, 112, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 109, 111, 110, 103, 111, 32, 45, 116, 61, 115, 116, 97, 114, 116, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 109, 111, 110, 103, 111, 32, 45, 116, 61, 115, 116, 111, 112, 10, 10, 10, 35, 111, 114, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 10, 101, 110, 100, 108, 121, 32, 45, 119, 61, 115, 101, 114, 118, 105, 99, 101, 47, 109, 111, 110, 103, 111, 32, 45, 116, 61, 115, 116, 97, 114, 116, 32, 110, 97, 109, 101, 61, 109, 121, 68, 66, 10, 96, 96, 96, 10, 10, 35, 35, 35, 35, 32, 95, 87, 111, 114, 107, 102, 108, 111, 119, 32, 119, 105, 116, 104, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 95, 10, 10, 96, 96, 96, 98, 97, 115, 104, 10, 101, 110, 100, 108, 121, 32, 45, 114, 61, 114, 117, 110, 10, 96, 96, 96, 10, 10, 42, 42, 80, 105, 112, 101, 108, 105, 110, 101, 32, 109, 117, 108, 116, 105, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 10, 96, 96, 96, 121, 97, 109, 108, 10, 112, 105, 112, 101, 108, 105, 110, 101, 58, 10, 32, 32, 115, 101, 114, 118, 105, 99, 101, 58, 10, 32, 32, 32, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 32, 115, 101, 114, 118, 105, 99, 101, 47, 109, 111, 110, 103, 111, 58, 115, 116, 97, 114, 116, 10, 32, 32, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 108, 97, 116, 101, 115, 116, 10, 32, 32, 98, 117, 105, 108, 100, 58, 10, 32, 32, 32, 32, 97, 99, 116, 105, 111, 110, 58, 32, 119, 111, 114, 107, 102, 108, 111, 119, 58, 112, 114, 105, 110, 116, 10, 32, 32, 32, 32, 109, 101, 115, 115, 97, 103, 101, 58, 32, 98, 117, 105, 108, 100, 105, 110, 103, 32, 97, 112, 112, 32, 46, 46, 46, 10, 96, 96, 96, 10, 10, 10, 42, 42, 83, 105, 110, 103, 108, 101, 32, 116, 97, 115, 107, 115, 32, 114, 117, 110, 42, 42, 10, 10, 64, 114, 117, 110, 46, 121, 97, 109, 108, 32, 10, 96, 96, 96, 121, 97, 109, 108, 10, 110, 97, 109, 101, 58, 32, 115, 101, 114, 118, 105, 99, 101, 47, 109, 111, 110, 103, 111, 10, 116, 97, 115, 107, 115, 58, 32, 115, 116, 97, 114, 116, 10, 112, 97, 114, 97, 109, 115, 58, 10, 32, 32, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 49, 10, 32, 32, 118, 101, 114, 115, 105, 111, 110, 58, 32, 108, 97, 116, 101, 115, 116, 10, 96, 96, 96, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/README.md %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/req/query.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 115, 113, 108, 58, 32, 83, 69, 76, 69, 67, 84, 32, 105, 100, 32, 70, 82, 79, 77, 32, 100, 117, 109, 109, 121, 10, 105, 103, 110, 111, 114, 101, 69, 114, 114, 111, 114, 58, 32, 116, 114, 117, 101}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/req/query.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/req/register.yaml", bytes.NewReader([]byte{100, 97, 116, 97, 115, 116, 111, 114, 101, 58, 32, 116, 101, 115, 116, 100, 98, 10, 99, 111, 110, 102, 105, 103, 58, 10, 32, 32, 100, 114, 105, 118, 101, 114, 78, 97, 109, 101, 58, 32, 109, 103, 99, 10, 32, 32, 80, 97, 114, 97, 109, 101, 116, 101, 114, 115, 58, 10, 32, 32, 32, 32, 100, 98, 110, 97, 109, 101, 58, 32, 109, 121, 100, 98, 10, 32, 32, 32, 32, 104, 111, 115, 116, 58, 32, 49, 50, 55, 46, 48, 46, 48, 46, 49, 10, 32, 32, 32, 32, 112, 111, 114, 116, 58, 32, 50, 55, 48, 49, 55, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/req/register.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/req/run.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10, 105, 109, 97, 103, 101, 58, 32, 36, 105, 109, 97, 103, 101, 10, 112, 111, 114, 116, 115, 58, 10, 32, 32, 34, 50, 55, 48, 49, 55, 34, 58, 32, 34, 50, 55, 48, 49, 55, 34, 10, 101, 110, 118, 58, 32, 36, 101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/req/run.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/req/stop.yaml", bytes.NewReader([]byte{116, 97, 114, 103, 101, 116, 58, 32, 36, 115, 101, 114, 118, 105, 99, 101, 84, 97, 114, 103, 101, 116, 10, 110, 97, 109, 101, 58, 32, 36, 110, 97, 109, 101, 10}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/req/stop.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/req/goto_check.yaml", bytes.NewReader([]byte{116, 97, 115, 107, 58, 32, 99, 104, 101, 99, 107}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/req/goto_check.yaml %v", err)
		}
	}
	{
		err := memStorage.Upload("mem://github.com/viant/endly/workflow/service/mongo/mongo.csv", bytes.NewReader([]byte{87, 111, 114, 107, 102, 108, 111, 119, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 84, 97, 115, 107, 115, 44, 44, 73, 110, 105, 116, 44, 13, 10, 44, 44, 44, 109, 111, 110, 103, 111, 44, 97, 101, 114, 111, 112, 115, 105, 107, 101, 32, 100, 111, 99, 107, 101, 114, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 84, 97, 115, 107, 115, 44, 44, 64, 118, 97, 114, 47, 105, 110, 105, 116, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 44, 44, 115, 116, 97, 114, 116, 44, 115, 116, 97, 114, 116, 32, 109, 111, 110, 103, 111, 32, 115, 101, 114, 118, 105, 99, 101, 44, 37, 83, 116, 97, 114, 116, 44, 44, 44, 13, 10, 91, 93, 83, 116, 97, 114, 116, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 44, 100, 111, 99, 107, 101, 114, 44, 114, 117, 110, 44, 115, 116, 97, 114, 116, 32, 109, 111, 110, 103, 111, 44, 64, 114, 101, 113, 47, 114, 117, 110, 44, 44, 44, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 114, 101, 103, 105, 115, 116, 101, 114, 44, 114, 101, 103, 105, 115, 116, 101, 114, 32, 116, 101, 115, 116, 32, 100, 98, 32, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 44, 64, 114, 101, 113, 47, 114, 101, 103, 105, 115, 116, 101, 114, 44, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 44, 44, 99, 104, 101, 99, 107, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 115, 116, 97, 114, 116, 101, 100, 44, 37, 67, 104, 101, 99, 107, 44, 44, 44, 13, 10, 91, 93, 67, 104, 101, 99, 107, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 80, 111, 115, 116, 44, 87, 104, 101, 110, 44, 83, 108, 101, 101, 112, 84, 105, 109, 101, 77, 115, 13, 10, 44, 44, 100, 115, 117, 110, 105, 116, 44, 113, 117, 101, 114, 121, 44, 114, 117, 110, 32, 116, 101, 115, 116, 32, 113, 117, 101, 114, 121, 44, 64, 114, 101, 113, 47, 113, 117, 101, 114, 121, 44, 32, 64, 118, 97, 114, 47, 115, 116, 97, 116, 117, 115, 44, 44, 13, 10, 44, 44, 119, 111, 114, 107, 102, 108, 111, 119, 44, 103, 111, 116, 111, 44, 99, 104, 101, 99, 107, 32, 105, 102, 32, 100, 98, 32, 114, 101, 97, 100, 121, 44, 64, 114, 101, 113, 47, 103, 111, 116, 111, 95, 99, 104, 101, 99, 107, 44, 44, 36, 115, 116, 97, 116, 117, 115, 58, 47, 105, 115, 32, 110, 111, 116, 32, 121, 101, 116, 32, 102, 117, 108, 108, 121, 32, 105, 110, 105, 116, 105, 97, 108, 105, 122, 101, 100, 47, 44, 49, 48, 48, 48, 13, 10, 91, 93, 84, 97, 115, 107, 115, 44, 44, 44, 78, 97, 109, 101, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 65, 99, 116, 105, 111, 110, 115, 44, 44, 44, 13, 10, 44, 44, 44, 115, 116, 111, 112, 44, 115, 116, 111, 112, 32, 109, 111, 110, 103, 111, 32, 36, 110, 97, 109, 101, 44, 37, 83, 116, 111, 112, 44, 44, 44, 13, 10, 91, 93, 83, 116, 111, 112, 44, 44, 83, 101, 114, 118, 105, 99, 101, 44, 65, 99, 116, 105, 111, 110, 44, 68, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110, 44, 82, 101, 113, 117, 101, 115, 116, 44, 44, 44, 13, 10, 44, 44, 100, 111, 99, 107, 101, 114, 44, 115, 116, 111, 112, 44, 115, 116, 97, 114, 116, 32, 109, 111, 110, 103, 111, 32, 36, 110, 97, 109, 101, 44, 64, 114, 101, 113, 47, 115, 116, 111, 112, 44, 44, 44}))
		if err != nil {
			log.Printf("failed to upload: mem://github.com/viant/endly/workflow/service/mongo/mongo.csv %v", err)
		}
	}
}
